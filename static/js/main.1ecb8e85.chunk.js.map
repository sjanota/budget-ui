{"version":3,"sources":["components/template/Context.js","components/template/Topbar/TopbarContext.js","components/template/Topbar/Topbar.js","components/template/Topbar/TopbarMenu.js","components/template/Topbar/TopbarUser.js","components/template/Topbar/TopbarContextSwitcher.js","components/gql/monthlyReport.js","components/gql/envelopes.js","util/immutable.js","components/gql/plans.js","components/gql/accounts.js","components/gql/transfers.js","components/gql/expenses.js","components/gql/budget.js","components/template/Utilities/Spinner.js","components/template/Utilities/Lang.js","components/TopbarBudgetSwitcher.js","react-auth0-spa.js","components/Topbar.js","components/template/Page/Page.js","components/template/NotFoundPage.js","components/template/Sidebar/SidebarCollapsibleLink.js","components/template/Sidebar/SidebarSimpleLink.js","components/template/Sidebar/SidebarGroup.js","components/template/Sidebar/Sidebar.js","components/template/SBAdmin2.js","components/App/sidebarConfig.js","components/template/Page/PageHeader.js","components/template/Utilities/ModalButton.js","components/template/Utilities/SplitButton.js","components/template/Utilities/CreateButton.js","components/template/Utilities/TableButton.js","components/template/Utilities/EditTableButton.js","components/template/Utilities/FormControl.js","components/template/Utilities/SaveButton.js","components/template/Utilities/CancelButton.js","components/template/Utilities/FormModal.js","components/template/Utilities/useFormData.js","model/Amount.js","components/template/Utilities/Panel.js","components/template/Utilities/RefreshButton.js","components/gql/WithQuery.js","components/gql/QueryTablePanel.js","components/Accounts.js","components/template/Utilities/OptionalFormControl.js","model/propTypes.js","components/Envelopes/EnvelopeModal.js","components/Envelopes/CreateEnvelopeButton.js","components/template/Utilities/ArchiveTableButton.js","components/Envelopes/UpdateEnvelopeButton.js","components/Envelopes/EnvelopesListPanel.js","components/gql/categories.js","components/template/Utilities/Combobox.js","components/template/Utilities/InlineFormControl.js","components/Categories/CategoryModal.js","components/Categories/CreateCategoryButton.js","components/Categories/UpdateCategoryButton.js","components/Categories/CategoriesListPanel.js","components/Envelopes/EnvelopesPage.js","model/Day.js","model/Month.js","components/Expenses.js","components/Transfers.js","components/Plans.js","components/template/Gauge.js","components/MonthDashboardPage.js","lang/pl.js","serviceWorker.js","apollo.js","index.js","components/Beta.js","components/App/App.js"],"names":["TemplateContext","React","createContext","TemplateProvider","children","useState","sidebarToggled","setSidebarToggled","Provider","value","toggleSidebar","current","useTemplate","useContext","TopbarContextExpanded","renderContext","className","TopbarContextMinimized","faIcon","id","role","data-toggle","aria-haspopup","aria-expanded","style","cursor","aria-labelledby","TopbarContext","minified","props","Topbar","renderMenus","renderUser","faIconContextMinified","onClick","TopbarMenuCounter","counter","badge","TopbarMenu","name","iconClasses","classnames","TopbarUser","pictureUrl","logout","alt","src","data-target","TopbarContextSwitcher","label","onChange","allowedValues","display","alignContent","flexGrow","aria-label","maxWidth","map","v","key","MONTHLY_REPORT_FRAGMENT","gql","GET_CURRENT_MONTHLY_REPORT","GET_ENVELOPES","CREATE_ENVELOPE","UPDATE_ENVELOPE","useGetEnvelopes","selectedBudget","useBudget","useQuery","variables","budgetID","removeFromListByID","list","elementId","idx","findIndex","e","slice","length","PLAN_FRAGMENT","GET_CURRENT_PLANS","CREATE_PLAN","UPDATE_PLAN","DELETE_PLAN","GET_ACCOUNTS","useGetAccounts","CREATE_ACCOUNT","UPDATE_ACCOUNT","TRANSFER_FRAGMENT","GET_CURRENT_TRANSFERS","CREATE_TRANSFER","UPDATE_TRANSFER","DELETE_TRANSFER","EXPENSE_FRAGMENT","GET_CURRENT_EXPENSES","CREATE_EXPENSE","UPDATE_EXPENSE","DELETE_EXPENSE","BudgetContext","GET_BUDGETS","storageKey","BudgetProvider","setSelectedBudget","loading","error","data","useEffect","sessionStorage","setItem","budgets","lastChosenID","getItem","lastChosen","find","b","console","CLOSE_CURRENT_MONTH","Spinner","size","variant","classNames","LangContext","LangProvider","dictionary","useDictionary","withColumnNames","columns","c","text","dataField","TopbarBudgetSwitcher","topbar","budgetLabel","budget","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","useAuth0","Auth0Provider","onRedirectCallback","returnTo","initOptions","isAuthenticated","setIsAuthenticated","user","setUser","token","setToken","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getTokenSilently","initAuth0","loginWithPopup","params","getIdTokenClaims","loginWithRedirect","getTokenWithPopup","p","getTokenScopes","claimsString","split","claims","JSON","parse","atob","scope","picture","alertsLabel","messagesLabel","Page","NotFoundPage","data-text","to","SidebarCollapsibleLink","parent","sections","isActive","some","routes","oneOfRoutsMatchesLocation","useLocation","active","aria-controls","data-parent","Fragment","SidebarSimpleLink","exact","SidebarGroup","group","entries","entry","undefined","Sidebar","renderBrandName","renderBrandIcon","config","toggled","SBAdmin2","sidebarProps","copyright","component","sidebarConfig","sidebar","pages","dashboard","currentMonth","expenses","transfers","plans","accounts","envelopes","PageHeader","ModalButton","button","modal","openRef","show","setShow","Button","Modal","onHide","sizeClasses","small","large","normal","SplitButton","disabled","styles","CreateButton","buttons","create","defaultProps","TableButton","EditTableButton","FormControl","inline","Form","Group","as","Row","Label","column","Input","SaveButton","save","CancelButton","cancel","formData","feedback","Col","sm","Control","ref","defaultValue","default","Feedback","type","FormModal","onSave","autoFocusRef","validated","setValidated","form","useRef","handleSave","event","preventDefault","stopPropagation","isValid","checkValidity","changed","input","onEntered","focus","onSubmit","Header","closeButton","Title","Body","Footer","createFormData","model","rerender","getRoot","Object","prototype","hasOwnProperty","call","$model","$init","_originalPush","push","removeAt","splice","arrayFormData","$process","$default","process","_default","init","simpleFormData","$includeAllValues","keys","reduce","acc","k","compositeFormData","useFormData","setValue","Amount","string","Math","round","Number","amount","kSeparator","fixed","toFixed","parts","replace","join","Panel","header","headerClassName","body","bodyClassName","headerClassNames","Card","HeaderWithButton","RefreshButton","classes","ErrorMessageList","errorMessage","subErrors","ErrorMessage","networkError","result","errors","graphQLErrors","path","message","WithQuery","query","showError","QueryTablePanel","getData","modifiedColumns","headerClasses","refetch","bootstrap4","striped","hover","bordered","align","headerAlign","formatter","format","isDummyColumn","cell","row","UpdateAccountButton","account","whiteSpace","width","AccountModal","labels","useMutation","mutation","rest","useUpdateAccount","updateAccount","editTitle","CreateAccountButton","update","cache","createAccount","readQuery","writeQuery","concat","useCreateAccount","createTitle","keyMap","openModal","keyHandlers","openCreateModal","Accounts","handlers","table","keyField","OptionalFormControl","initEnabled","enabled","setEnabled","toggleEnabled","Check","custom","checked","autoFocus","PropTypes","number","Account","shape","isRequired","Envelope","date","totalBalance","envelope","EnvelopeModal","limit","required","step","CreateEnvelopeButton","createEnvelope","useCreateEnvelope","ArchiveTableButton","UpdateEnvelopeButton","useUpdateEnvelope","updateEnvelope","balance","EnvelopesListPanel","createFunRef","GET_CATEGORIES","CREATE_CATEGORY","UPDATE_CATEGORY","useGetCategories","Combobox","_ref","defaultValueObject","filter","setFilter","selectedIdx","setSelectedIdx","menuRef","filtered","toLowerCase","selectedLabel","target","selected","onBlur","onKeyDown","keyCode","data-reference","data-flip","borderTopLeftRadius","borderBottomLeftRadius","margin","maxHeight","overflowY","InlineFormControl","CategoryModal","categories","envelopeID","description","CreateCategoryButton","createCategory","useCreateCategory","UpdateCategoryButton","category","useUpdateCategory","CategoriesListPanel","createEnvelopeFunRef","createCategoryFunRef","EnvelopesPage","Day","year","month","day","this","String","padStart","Date","getYear","getMonth","getDate","monthNames","Month","UpdateExpenseButton","expense","DeleteExpenseButton","rowClasses","rowIndex","expandRow","renderer","CategoriesInput","categoryFormData","categoryID","placeholder","log","ExpenseModal","accountsQuery","accountID","first","firstDay","last","lastDay","accountsData","min","max","deleteExpense","refetchQueries","useDeleteExpense","useUpdateExpense","updateExpense","CreateExpenseButton","createExpense","useCreateExpense","Expenses","useGetCurrentExpenses","UpdateTransferButton","transfer","DeleteTransferButton","TransferModal","fromAccountID","fromAccount","toAccountID","toAccount","deleteTransfer","useDeleteTranfer","useUpdateTransfer","updateTransfer","CreateTransferButton","createTransfer","useCreateTransfer","Transfers","useGetCurrentTransfers","UpdatePlanButton","plan","DeletePlanButton","PlanModal","currentAmount","recurringAmount","fd","fromEnvelopeID","fromEnvelope","toEnvelopeID","toEnvelope","recurring","useUpdatePlan","updatePlan","deletePlan","useDeletePlan","CreatePlanButton","createPlan","useCreatePlan","openCreateModalRef","Plans","useGetCurrentPlans","Gauge","Gauges","planned","totalPlannedAmount","incomes","totalIncomeAmount","leftToPlan","totalExpenseAmount","severityIcon","ERROR","WARNING","INFO","severityVariant","ProblemMessage","problem","envelopesQuery","envelopesData","__typename","overplanned","problems","underplanned","expensesExceedPlans","envelopeOverLimit","negativeAccountBalance","monthNotEnded","Problem","severity","NoProblems","noProblems","MonthProblems","StartNextMonthButton","warn","useCloseCurrentMonth","closeCurrentMonth","closeMonth","CurrentMonth","months","parsed","MonthDashboardPage","fetchPolicy","useGetCurrentMonthlyReport","overLimit","totalAmount","Boolean","hostname","match","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","createClient","graphqlApiUrl","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","InMemoryCache","errorLink","onError","REACT_APP_ENV","locations","link","ApolloClient","ApolloLink","from","connectToDevTools","AuthApolloProvider","client","targetUrl","authDisabled","REACT_APP_INSECURE_AUTH_DISABLED","AuthorizationProvider","domain","client_id","clientId","redirect_uri","audience","Promise","resolve","ReactDOM","render","setScope","then","basename","pl","Consumer","Envelopes","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ecb8e85.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TemplateContext = React.createContext();\n\nexport function TemplateProvider({ children }) {\n  const [sidebarToggled, setSidebarToggled] = useState(false);\n  return (\n    <TemplateContext.Provider\n      value={{\n        sidebarToggled,\n        toggleSidebar: () => setSidebarToggled(current => !current),\n      }}\n    >\n      {children}\n    </TemplateContext.Provider>\n  );\n}\n\nTemplateProvider.propTypes = {\n  children: PropTypes.any,\n};\n\nexport const useTemplate = () => useContext(TemplateContext);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TopbarContextExpanded({ renderContext }) {\n  return (\n    <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-context\">\n      {renderContext()}\n    </form>\n  );\n}\n\nfunction TopbarContextMinimized({ faIcon, renderContext }) {\n  return (\n    <li className=\"nav-item dropdown no-arrow d-sm-none\">\n      <span\n        className=\"nav-link dropdown-toggle\"\n        id=\"contextDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ cursor: 'pointer' }}\n      >\n        <i className={`fas fa-${faIcon} fa-fw`}></i>\n      </span>\n      <div\n        className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"\n        aria-labelledby=\"contextDropdown\"\n      >\n        <form className=\"form-inline mr-auto w-100 navbar-context\">\n          {renderContext()}\n        </form>\n      </div>\n    </li>\n  );\n}\n\nexport default function TopbarContext({ minified, ...props }) {\n  return minified ? (\n    <TopbarContextMinimized {...props} />\n  ) : (\n    <TopbarContextExpanded {...props} />\n  );\n}\n\nTopbarContext.propTypes = {\n  minified: PropTypes.bool,\n};\n","import React from 'react';\nimport { useTemplate } from '../Context';\nimport './Topbar.css';\nimport TopbarContext from './TopbarContext';\n\nexport default function Topbar({\n  renderMenus,\n  renderContext,\n  renderUser,\n  faIconContextMinified,\n}) {\n  const { toggleSidebar } = useTemplate();\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <button\n        onClick={toggleSidebar}\n        className=\"btn btn-link d-md-none rounded-circle mr-3\"\n      >\n        <i className=\"fa fa-bars\"></i>\n      </button>\n\n      <TopbarContext minified={false} renderContext={renderContext} />\n\n      <ul className=\"navbar-nav ml-auto\">\n        <TopbarContext\n          minified={true}\n          renderContext={renderContext}\n          faIcon={faIconContextMinified}\n        />\n\n        {renderMenus()}\n\n        <div className=\"topbar-divider d-none d-sm-block\" />\n\n        {renderUser()}\n      </ul>\n    </nav>\n  );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction TopbarMenuCounter({ counter }) {\n  const badge = counter >= 3 ? '3+' : '' + counter;\n  return (\n    counter > 0 && (\n      <span className=\"badge badge-danger badge-counter\">{badge}</span>\n    )\n  );\n}\n\nexport function TopbarMenu({ name, faIcon, children, counter }) {\n  const iconClasses = classnames('fas', 'fa-fw', `fa-${faIcon}`);\n  const id = `topbar--${name || faIcon}`;\n  return (\n    <li className=\"nav-item dropdown no-arrow mx-1\">\n      <span\n        className=\"nav-link dropdown-toggle\"\n        id={id}\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        style={{ cursor: 'pointer' }}\n      >\n        <i className={iconClasses} />\n        <TopbarMenuCounter counter={counter} />\n      </span>\n      <div\n        className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n        aria-labelledby={id}\n      >\n        <h6 className=\"dropdown-header\">{name}</h6>\n        {children}\n        <span\n          className=\"dropdown-item text-center small text-gray-500\"\n          style={{ cursor: 'pointer' }}\n        >\n          Show All\n        </span>\n      </div>\n    </li>\n  );\n}\n\nTopbarMenu.propTypes = {\n  entries: PropTypes.arrayOf(\n    PropTypes.shape({\n      highlighted: PropTypes.bool,\n      render: PropTypes.func.isRequired,\n    })\n  ),\n  faIcon: PropTypes.string,\n  name: PropTypes.string,\n};\n","import React from 'react';\n\nexport default function TopbarUser({ name, pictureUrl, logout }) {\n  return (\n    <li className=\"nav-item dropdown no-arrow\">\n      <span\n        className=\"nav-link dropdown-toggle\"\n        id=\"userDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">\n          {name}\n        </span>\n        <img alt=\"\" className=\"img-profile rounded-circle\" src={pictureUrl} />\n      </span>\n      <ul\n        className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n        aria-labelledby=\"userDropdown\"\n      >\n        <li className=\"dropdown-item\">\n          <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Settings\n        </li>\n        <div className=\"dropdown-divider\"></div>\n        <li\n          className=\"dropdown-item\"\n          data-toggle=\"modal\"\n          data-target=\"#logoutModal\"\n          onClick={() => logout()}\n        >\n          <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Logout\n        </li>\n      </ul>\n    </li>\n  );\n}\n","import React from 'react';\n\nexport default function TopbarContextSwitcher({\n  label,\n  value,\n  onChange,\n  allowedValues,\n}) {\n  return (\n    <div\n      className=\"input-group navbar-context-switcher\"\n      style={{ display: 'flex', alignContent: 'stretch' }}\n    >\n      <div className=\"input-group-prepend navbar-context-switcher-label\">\n        <label className=\"input-group-text border-0\">{label}</label>\n      </div>\n      <div\n        className=\"input-group-append btn-group\"\n        style={{\n          flexGrow: 1,\n        }}\n      >\n        <span\n          className=\"input-group-text bg-light border-0 navbar-context-display text-dark\"\n          aria-label={label}\n          style={{ flexGrow: 1 }}\n        >\n          {value}\n        </span>\n        <button\n          className=\"btn btn-primary dropdown-toggle dropdown-toggle-split no-arrow\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          style={{ maxWidth: '2rem' }}\n        />\n        <div className=\"dropdown-menu\">\n          {allowedValues.map(v => (\n            <span\n              className=\"dropdown-item\"\n              onClick={() => onChange(v.id)}\n              key={v.id}\n            >\n              {v.label}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import gql from 'graphql-tag';\nimport { useBudget } from './budget';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst MONTHLY_REPORT_FRAGMENT = gql`\n  fragment MonthlyReport on MonthlyReport {\n    month\n    totalPlannedAmount\n    totalIncomeAmount\n    totalExpenseAmount\n    problems {\n      severity\n      ... on EnvelopeOverLimit {\n        id\n      }\n      ... on NegativeBalanceOnAccount {\n        id\n      }\n      ... on NegativeBalanceOnEnvelope {\n        id\n      }\n      ... on Misplanned {\n        overplanned\n      }\n    }\n  }\n`;\n\nexport const GET_CURRENT_MONTHLY_REPORT = gql`\n  query GetCurrentMonthlyReport($budgetID: ID!) {\n    budget(budgetID: $budgetID) {\n      currentMonth {\n        ...MonthlyReport\n      }\n    }\n  }\n  ${MONTHLY_REPORT_FRAGMENT}\n`;\n\nexport function useGetCurrentMonthlyReport() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_CURRENT_MONTHLY_REPORT, {\n    variables: { budgetID: selectedBudget.id },\n    fetchPolicy: 'network-only',\n  });\n}\n","import gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\n\nexport const GET_ENVELOPES = gql`\n  query GetEnvelopes($budgetID: ID!) {\n    envelopes(budgetID: $budgetID) {\n      id\n      name\n      balance\n      limit\n    }\n  }\n`;\n\nconst CREATE_ENVELOPE = gql`\n  mutation CreateEnvelope($budgetID: ID!, $input: EnvelopeInput!) {\n    createEnvelope(budgetID: $budgetID, in: $input) {\n      id\n      name\n      balance\n      limit\n    }\n  }\n`;\n\nconst UPDATE_ENVELOPE = gql`\n  mutation UpdateEnvelope($budgetID: ID!, $id: ID!, $input: EnvelopeUpdate!) {\n    updateEnvelope(budgetID: $budgetID, id: $id, in: $input) {\n      id\n      name\n      balance\n      limit\n    }\n  }\n`;\n\nexport function useCreateEnvelope() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_ENVELOPE, {\n    update: (cache, { data: { createEnvelope } }) => {\n      const { envelopes } = cache.readQuery({\n        query: GET_ENVELOPES,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_ENVELOPES,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          envelopes: envelopes.concat([createEnvelope]),\n        },\n      });\n    },\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useUpdateEnvelope() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_ENVELOPE);\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useGetEnvelopes() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_ENVELOPES, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n","export function addToList(list, element) {\n  return [...list, element]\n}\n\nexport function removeFromList(list, element) {\n  const idx = list.indexOf(element);\n  if (idx === -1) {\n    return list\n  }\n  return [...list.slice(0, idx), ...list.slice(idx+1, list.length)]\n}\n\nexport function removeFromListByID(list, elementId) {\n  const idx = list.findIndex(e => e.id === elementId);\n  if (idx === -1) {\n    return list\n  }\n  return [...list.slice(0, idx), ...list.slice(idx+1, list.length)]\n}\n\nexport function replaceOnList(list, idx, element) {\n  if (idx < 0 || idx > list.length) {\n    return list\n  }\n  return [...list.slice(0, idx), element, ...list.slice(idx+1, list.length)]\n}\n\nexport function replaceOnListByID(list, element) {\n  const idx = list.findIndex(e => e.id === element.id);\n\n  if (idx === -1) {\n    return list\n  }\n\n  return [...list.slice(0, idx), element, ...list.slice(idx+1, list.length)]\n}","import gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\nimport { GET_ENVELOPES } from './envelopes';\nimport { GET_CURRENT_MONTHLY_REPORT } from './monthlyReport';\nimport { removeFromListByID } from '../../util/immutable';\n\nconst PLAN_FRAGMENT = gql`\n  fragment Plan on Plan {\n    id\n    title\n    fromEnvelope {\n      id\n      name\n    }\n    toEnvelope {\n      id\n      name\n    }\n    currentAmount\n    recurringAmount\n  }\n`;\n\nexport const GET_CURRENT_PLANS = gql`\n  query getCurrentPlans($budgetID: ID!) {\n    budget(budgetID: $budgetID) {\n      currentMonth {\n        plans {\n          ...Plan\n        }\n      }\n    }\n  }\n  ${PLAN_FRAGMENT}\n`;\n\nexport function useGetCurrentPlans() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_CURRENT_PLANS, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n\nconst CREATE_PLAN = gql`\n  mutation createPlan($budgetID: ID!, $input: PlanInput!) {\n    createPlan(budgetID: $budgetID, in: $input) {\n      ...Plan\n    }\n  }\n  ${PLAN_FRAGMENT}\n`;\n\nexport function useCreatePlan() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_PLAN, {\n    update: (cache, { data: { createPlan } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_PLANS,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_PLANS,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              plans: budget.currentMonth.plans.concat([createPlan]),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nconst UPDATE_PLAN = gql`\n  mutation updatePlan($budgetID: ID!, $id: ID!, $input: PlanUpdate!) {\n    updatePlan(budgetID: $budgetID, id: $id, in: $input) {\n      ...Plan\n    }\n  }\n  ${PLAN_FRAGMENT}\n`;\n\nexport function useUpdatePlan() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_PLAN, {\n    refetchQueries: () => [\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nconst DELETE_PLAN = gql`\n  mutation deletePlan($budgetID: ID!, $id: ID!) {\n    deletePlan(budgetID: $budgetID, id: $id) {\n      id\n    }\n  }\n`;\n\nexport function useDeletePlan() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(DELETE_PLAN, {\n    update: (cache, { data: { deletePlan } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_PLANS,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_PLANS,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              plans: removeFromListByID(\n                budget.currentMonth.plans,\n                deletePlan.id\n              ),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = id => {\n    mutation({ variables: { budgetID: selectedBudget.id, id } });\n  };\n  return [wrapper, ...rest];\n}\n","import gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\n\nexport const GET_ACCOUNTS = gql`\n  query GetAccounts($budgetID: ID!) {\n    accounts(budgetID: $budgetID) {\n      id\n      name\n      balance\n    }\n  }\n`;\n\nexport function useGetAccounts() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_ACCOUNTS, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n\nconst CREATE_ACCOUNT = gql`\n  mutation CreateAccount($budgetID: ID!, $input: AccountInput!) {\n    createAccount(budgetID: $budgetID, in: $input) {\n      id\n      name\n      balance\n    }\n  }\n`;\n\nexport function useCreateAccount() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_ACCOUNT, {\n    update: (cache, { data: { createAccount } }) => {\n      const { accounts } = cache.readQuery({\n        query: GET_ACCOUNTS,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_ACCOUNTS,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          accounts: accounts.concat([createAccount]),\n        },\n      });\n    },\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nconst UPDATE_ACCOUNT = gql`\n  mutation UpdateAccount($budgetID: ID!, $id: ID!, $input: AccountUpdate!) {\n    updateAccount(budgetID: $budgetID, id: $id, in: $input) {\n      id\n      name\n      balance\n    }\n  }\n`;\n\nexport function useUpdateAccount() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_ACCOUNT);\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n","import gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\nimport { GET_CURRENT_MONTHLY_REPORT } from './monthlyReport';\nimport { GET_ACCOUNTS } from './accounts';\nimport { removeFromListByID } from '../../util/immutable';\n\nconst TRANSFER_FRAGMENT = gql`\n  fragment Transfer on Transfer {\n    id\n    title\n    fromAccount {\n      id\n      name\n    }\n    toAccount {\n      id\n      name\n    }\n    amount\n    date\n  }\n`;\n\nexport const GET_CURRENT_TRANSFERS = gql`\n  query getCurrentTransfers($budgetID: ID!) {\n    budget(budgetID: $budgetID) {\n      currentMonth {\n        transfers {\n          ...Transfer\n        }\n      }\n    }\n  }\n  ${TRANSFER_FRAGMENT}\n`;\n\nexport function useGetCurrentTransfers() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_CURRENT_TRANSFERS, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n\nconst CREATE_TRANSFER = gql`\n  mutation createTransfer($budgetID: ID!, $input: TransferInput!) {\n    createTransfer(budgetID: $budgetID, in: $input) {\n      ...Transfer\n    }\n  }\n  ${TRANSFER_FRAGMENT}\n`;\n\nexport function useCreateTransfer() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_TRANSFER, {\n    update: (cache, { data: { createTransfer } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_TRANSFERS,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_TRANSFERS,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              transfers: budget.currentMonth.transfers.concat([createTransfer]),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nconst UPDATE_TRANSFER = gql`\n  mutation updateTransfer($budgetID: ID!, $id: ID!, $input: TransferUpdate!) {\n    updateTransfer(budgetID: $budgetID, id: $id, in: $input) {\n      ...Transfer\n    }\n  }\n  ${TRANSFER_FRAGMENT}\n`;\n\nexport function useUpdateTransfer() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_TRANSFER, {\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nconst DELETE_TRANSFER = gql`\n  mutation deleteTransfer($budgetID: ID!, $id: ID!) {\n    deleteTransfer(budgetID: $budgetID, id: $id) {\n      id\n    }\n  }\n`;\n\nexport function useDeleteTranfer() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(DELETE_TRANSFER, {\n    update: (cache, { data: { deleteTransfer } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_TRANSFERS,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_TRANSFERS,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              transfers: removeFromListByID(\n                budget.currentMonth.transfers,\n                deleteTransfer.id\n              ),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = id => {\n    mutation({ variables: { budgetID: selectedBudget.id, id } });\n  };\n  return [wrapper, ...rest];\n}\n","import gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\nimport { removeFromListByID } from '../../util/immutable';\nimport { GET_ACCOUNTS } from './accounts';\nimport { GET_CURRENT_MONTHLY_REPORT } from './monthlyReport';\nimport { GET_ENVELOPES } from './envelopes';\n\nconst EXPENSE_FRAGMENT = gql`\n  fragment Expense on Expense {\n    id\n    title\n    account {\n      id\n      name\n    }\n    categories {\n      category {\n        id\n        name\n      }\n      amount\n    }\n    totalAmount\n    date\n  }\n`;\n\nexport const GET_CURRENT_EXPENSES = gql`\n  query getCurrentExpenses($budgetID: ID!) {\n    budget(budgetID: $budgetID) {\n      currentMonth {\n        expenses {\n          ...Expense\n        }\n      }\n    }\n  }\n\n  ${EXPENSE_FRAGMENT}\n`;\n\nconst CREATE_EXPENSE = gql`\n  mutation createExpense($budgetID: ID!, $input: ExpenseInput!) {\n    createExpense(budgetID: $budgetID, in: $input) {\n      ...Expense\n    }\n  }\n\n  ${EXPENSE_FRAGMENT}\n`;\n\nconst UPDATE_EXPENSE = gql`\n  mutation updateExpense($budgetID: ID!, $id: ID!, $input: ExpenseUpdate!) {\n    updateExpense(budgetID: $budgetID, id: $id, in: $input) {\n      ...Expense\n    }\n  }\n\n  ${EXPENSE_FRAGMENT}\n`;\n\nexport function useCreateExpense() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_EXPENSE, {\n    update: (cache, { data: { createExpense } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_EXPENSES,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_EXPENSES,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              expenses: budget.currentMonth.expenses.concat([createExpense]),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useUpdateExpense() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_EXPENSE, {\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useGetCurrentExpenses() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_CURRENT_EXPENSES, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n\nconst DELETE_EXPENSE = gql`\n  mutation deleteExpense($budgetID: ID!, $id: ID!) {\n    deleteExpense(budgetID: $budgetID, id: $id) {\n      id\n    }\n  }\n`;\n\nexport function useDeleteExpense() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(DELETE_EXPENSE, {\n    update: (cache, { data: { deleteExpense } }) => {\n      const { budget } = cache.readQuery({\n        query: GET_CURRENT_EXPENSES,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CURRENT_EXPENSES,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          budget: {\n            ...budget,\n            currentMonth: {\n              ...budget.currentMonth,\n              expenses: removeFromListByID(\n                budget.currentMonth.expenses,\n                deleteExpense.id\n              ),\n            },\n          },\n        },\n      });\n    },\n    refetchQueries: () => [\n      { query: GET_ACCOUNTS, variables: { budgetID: selectedBudget.id } },\n      { query: GET_ENVELOPES, variables: { budgetID: selectedBudget.id } },\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = id => {\n    mutation({ variables: { budgetID: selectedBudget.id, id } });\n  };\n  return [wrapper, ...rest];\n}\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { GET_CURRENT_MONTHLY_REPORT } from './monthlyReport';\nimport { GET_CURRENT_PLANS } from './plans';\nimport { GET_CURRENT_TRANSFERS } from './transfers';\nimport { GET_CURRENT_EXPENSES } from './expenses';\n\nexport const BudgetContext = createContext();\nexport const useBudget = () => useContext(BudgetContext);\n\nconst GET_BUDGETS = gql`\n  query GetBudgets {\n    budgets {\n      id\n      name\n      currentMonth {\n        month\n      }\n    }\n  }\n`;\n\nconst storageKey = 'LAST-CHOSEN-BUDGET-ID';\n\nexport function BudgetProvider({ children }) {\n  const [selectedBudget, setSelectedBudget] = useState(null);\n  const { loading, error, data } = useQuery(GET_BUDGETS);\n  useEffect(() => {\n    if (selectedBudget) {\n      sessionStorage.setItem(storageKey, selectedBudget.id);\n    }\n  }, [selectedBudget]);\n  useEffect(() => {\n    if (!selectedBudget && data && data.budgets) {\n      const lastChosenID = sessionStorage.getItem(storageKey);\n      const lastChosen = data.budgets.find(b => b.id === lastChosenID);\n      if (lastChosen) {\n        setSelectedBudget(lastChosen);\n      }\n    }\n  }, [data, selectedBudget]);\n  const value = {\n    selectedBudget,\n    setSelectedBudget,\n    loading,\n    error,\n    budgets: !loading && !error ? data.budgets : [],\n  };\n  if (error) {\n    console.error(error);\n  }\n  return (\n    <BudgetContext.Provider value={value}>{children}</BudgetContext.Provider>\n  );\n}\n\nBudgetProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nconst CLOSE_CURRENT_MONTH = gql`\n  mutation closeMonth($budgetID: ID!) {\n    closeCurrentMonth(budgetID: $budgetID) {\n      id\n    }\n  }\n`;\n\nexport function useCloseCurrentMonth() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CLOSE_CURRENT_MONTH, {\n    refetchQueries: () => [\n      {\n        query: GET_CURRENT_MONTHLY_REPORT,\n        variables: { budgetID: selectedBudget.id },\n      },\n      {\n        query: GET_CURRENT_PLANS,\n        variables: { budgetID: selectedBudget.id },\n      },\n      {\n        query: GET_CURRENT_TRANSFERS,\n        variables: { budgetID: selectedBudget.id },\n      },\n      {\n        query: GET_CURRENT_EXPENSES,\n        variables: { budgetID: selectedBudget.id },\n      },\n    ],\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport default function Spinner({ size, variant }) {\n  const classNames = classnames('spinner-border', {\n    [`spinner-border-${size}`]: size,\n    [`text-${variant}`]: variant,\n  });\n  return (\n    <div className={classNames} role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n","import React, { createContext, useContext } from 'react';\n\nconst LangContext = createContext();\n\nexport const LangProvider = ({ dictionary, children }) => (\n  <LangContext.Provider value={dictionary}>{children}</LangContext.Provider>\n);\n\nexport const useDictionary = () => useContext(LangContext);\n\nexport function withColumnNames(columns, dictionary) {\n  return columns.map(c => ({ ...c, text: dictionary[c.dataField] || '' }));\n}\n","import React from 'react';\nimport TopbarContextSwitcher from './template/Topbar/TopbarContextSwitcher';\nimport { useBudget } from './gql/budget';\nimport Spinner from './template/Utilities/Spinner';\nimport { useDictionary } from './template/Utilities/Lang';\n\nexport default function TopbarBudgetSwitcher() {\n  const {\n    selectedBudget,\n    setSelectedBudget,\n    budgets,\n    loading,\n    error,\n  } = useBudget();\n  const { topbar } = useDictionary();\n  const value = loading ? (\n    <Spinner size=\"sm\" variant=\"secondary\" />\n  ) : error ? (\n    <i className=\"fas fa-fw fa-exclamation-triangle text-secondary\" />\n  ) : (\n    selectedBudget && selectedBudget.name\n  );\n  const onChange = id => {\n    const budget = budgets.find(b => b.id === id);\n    setSelectedBudget(budget);\n  };\n  return (\n    <TopbarContextSwitcher\n      label={topbar.budgetLabel}\n      value={value}\n      onChange={onChange}\n      allowedValues={budgets.map(b => ({ id: b.id, label: b.name }))}\n    />\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  returnTo,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [token, setToken] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n\n        const token = await auth0FromHook.getTokenSilently();\n        setToken(token);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        token,\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout({ ...p, returnTo }),\n        getTokenScopes: async (...p) => {\n          const token = await auth0Client.getTokenSilently(...p);\n          const claimsString = token.split('.')[1];\n          const claims = JSON.parse(atob(claimsString));\n          const scope = claims.scope.split(' ');\n          return scope;\n        },\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from 'react';\nimport TemplateTopbar from './template/Topbar/Topbar';\nimport { TopbarMenu } from './template/Topbar/TopbarMenu';\nimport TopbarUser from './template/Topbar/TopbarUser';\nimport TopbarBudgetSwitcher from './TopbarBudgetSwitcher';\nimport { useAuth0 } from '../react-auth0-spa';\nimport { useDictionary } from './template/Utilities/Lang';\n\nexport default function Topbar() {\n  const { user, logout } = useAuth0();\n  const { topbar } = useDictionary();\n  return (\n    <TemplateTopbar\n      faIconContextMinified=\"search\"\n      renderContext={() => <TopbarBudgetSwitcher />}\n      renderUser={() => (\n        <TopbarUser\n          name={user.name}\n          pictureUrl={user.picture}\n          logout={logout}\n        />\n      )}\n      renderMenus={() => (\n        <>\n          <TopbarMenu\n            name={topbar.alertsLabel}\n            faIcon=\"bell\"\n            counter={0}\n          ></TopbarMenu>\n          <TopbarMenu\n            name={topbar.messagesLabel}\n            faIcon=\"envelope\"\n            counter={0}\n          ></TopbarMenu>\n        </>\n      )}\n    />\n  );\n}\n","import React from 'react';\n\nexport default function Page({ children }) {\n  return <div className=\"container-fluid\">{children}</div>;\n}\n","import React from 'react';\nimport Page from './Page/Page';\nimport { Link } from 'react-router-dom';\n\nexport default function NotFoundPage() {\n  return (\n    <Page>\n      <div className=\"text-center\">\n        <div className=\"error mx-auto\" data-text=\"404\">\n          404\n        </div>\n        <p className=\"lead text-gray-800 mb-5\">Page Not Found</p>\n        <p className=\"text-gray-500 mb-0\">\n          It looks like you found a glitch in the matrix...\n        </p>\n        <Link to=\"/\">&larr; Back to Dashboard</Link>\n      </div>\n    </Page>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction oneOfRoutsMatchesLocation(sections, location) {\n  return sections.some(({ routes }) =>\n    routes.some(({ to }) => location.pathname === to)\n  );\n}\n\nexport default function SidebarCollapsibleLink({\n  name,\n  parent,\n  sections,\n  faIcon,\n}) {\n  const location = useLocation();\n  const isActive = oneOfRoutsMatchesLocation(sections, location);\n  const classNames = classnames('nav-item', { active: isActive });\n  const id = 'sidebar--' + name;\n  const iconClasses = classnames('fas', 'fa-fw', `fa-${faIcon}`);\n  return (\n    <li className={classNames}>\n      <span\n        className=\"nav-link collapsed\"\n        data-toggle=\"collapse\"\n        data-target={'#' + id}\n        aria-expanded=\"true\"\n        aria-controls={id}\n      >\n        <i className={iconClasses}></i>\n        <span>{name}</span>\n      </span>\n      <div id={id} className=\"collapse\" data-parent={'#' + parent}>\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          {sections.map(({ name, routes }) => {\n            return (\n              <React.Fragment key={name}>\n                <h6 className=\"collapse-header\">{name}:</h6>\n                {routes.map(({ to, label }) => {\n                  return (\n                    <NavLink key={label} className=\"collapse-item\" to={to}>\n                      {label}\n                    </NavLink>\n                  );\n                })}\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </div>\n    </li>\n  );\n}\n\nSidebarCollapsibleLink.propTypes = {\n  faIcon: PropTypes.string,\n  name: PropTypes.string,\n  parent: PropTypes.string,\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      routes: PropTypes.arrayOf(\n        PropTypes.shape({\n          label: PropTypes.string,\n          to: PropTypes.string,\n        })\n      ).isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function SidebarSimpleLink({ name, to, faIcon }) {\n  const iconClasses = classnames('fas', 'fa-fw', `fa-${faIcon}`);\n  return (\n    <li className=\"nav-item\">\n      <NavLink className=\"nav-link\" exact to={to}>\n        <i className={iconClasses} />\n        <span>{name}</span>\n      </NavLink>\n    </li>\n  );\n}\n\nSidebarSimpleLink.propTypes = {\n  faIcon: PropTypes.string,\n  name: PropTypes.string,\n  to: PropTypes.string,\n};\n","import React from 'react';\nimport SidebarCollapsibleLink from './SidebarCollapsibleLink';\nimport SidebarSimpleLink from './SidebarSimpleLink';\nimport PropTypes from 'prop-types';\n\nexport function SidebarGroup({ group }) {\n  return (\n    <>\n      <hr className=\"sidebar-divider my-1\" />\n      {group.name && <div className=\"sidebar-heading\">{group.name}</div>}\n      {group.entries.map(entry =>\n        entry.to !== undefined ? (\n          <SidebarSimpleLink key={entry.name} {...entry} />\n        ) : (\n          <SidebarCollapsibleLink\n            key={entry.name}\n            parent=\"accordionSidebar\"\n            {...entry}\n          />\n        )\n      )}\n    </>\n  );\n}\n\nSidebarGroup.propTypes = {\n  group: PropTypes.shape({\n    name: PropTypes.string,\n    entries: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape(SidebarCollapsibleLink.propTypes),\n        PropTypes.shape(SidebarSimpleLink.propTypes),\n      ])\n    ).isRequired,\n  }),\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { SidebarGroup } from './SidebarGroup';\nimport { useTemplate } from '../Context';\nimport './Sidebar.css';\n\nexport default function Sidebar({ renderBrandName, renderBrandIcon, config }) {\n  const { sidebarToggled, toggleSidebar } = useTemplate();\n  const classNames = classnames(\n    'navbar-nav',\n    'bg-gradient-primary',\n    'sidebar',\n    'sidebar-dark',\n    'accordion',\n    { toggled: sidebarToggled }\n  );\n  return (\n    <ul className={classNames} id=\"accordionSidebar\">\n      <Link\n        className=\"sidebar-brand d-flex align-items-center justify-content-center\"\n        to=\"/\"\n      >\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          {renderBrandIcon()}\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">{renderBrandName()}</div>\n      </Link>\n\n      {config.map((group, idx) => (\n        <SidebarGroup key={group.name || idx} group={group} />\n      ))}\n\n      <hr className=\"sidebar-divider d-none d-md-block\" />\n\n      <div className=\"text-center d-none d-md-inline\">\n        <button\n          className=\"rounded-circle border-0\"\n          id=\"sidebarToggle\"\n          onClick={toggleSidebar}\n        ></button>\n      </div>\n    </ul>\n  );\n}\n\nSidebar.propTypes = {\n  config: PropTypes.arrayOf(SidebarGroup.propTypes.group).isRequired,\n  renderBrandIcon: PropTypes.func.isRequired,\n  renderBrandName: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TemplateProvider } from './Context';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport NotFoundPage from './NotFoundPage';\nimport Sidebar from './Sidebar/Sidebar';\n\nexport default function SBAdmin2({\n  sidebarProps,\n  topbar,\n  children,\n  copyright,\n}) {\n  const Topbar = topbar;\n  return (\n    <TemplateProvider>\n      <div id=\"wrapper\">\n        <Sidebar {...sidebarProps} />\n        <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n          <div id=\"content\">\n            <Topbar />\n            <Switch>\n              {children}\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n      <footer className=\"sticky-footer bg-white\">\n        <div className=\"container my-auto\">\n          <div className=\"copyright text-center my-auto\">\n            <span>Copyright &copy; {copyright}</span>\n          </div>\n        </div>\n      </footer>\n    </TemplateProvider>\n  );\n}\n\nSBAdmin2.propTypes = {\n  children: PropTypes.any,\n  copyright: PropTypes.string,\n  sidebarProps: PropTypes.shape(Sidebar.propTypes).isRequired,\n  topbar: PropTypes.elementType.isRequired,\n};\n","export const sidebarConfig = ({ sidebar }) => [\n  {\n    entries: [\n      {\n        name: sidebar.pages.dashboard,\n        faIcon: 'receipt',\n        to: '/',\n      },\n    ],\n  },\n  {\n    name: sidebar.sections.currentMonth,\n    entries: [\n      {\n        name: sidebar.pages.expenses,\n        faIcon: 'receipt',\n        to: '/expenses',\n      },\n      {\n        name: sidebar.pages.transfers,\n        faIcon: 'exchange-alt',\n        to: '/transfers',\n      },\n      {\n        name: sidebar.pages.plans,\n        faIcon: 'map-marked-alt',\n        to: '/plans',\n      },\n    ],\n  },\n  {\n    name: sidebar.sections.budget,\n    entries: [\n      {\n        name: sidebar.pages.accounts,\n        faIcon: 'credit-card',\n        to: '/accounts',\n      },\n      {\n        name: sidebar.pages.envelopes,\n        faIcon: 'envelope-open-text',\n        to: '/envelopes',\n      },\n    ],\n  },\n];\n","import React from 'react';\n\nexport default function PageHeader({ children }) {\n  return <h1 className=\"h3 mb-4 text-gray-800\">{children}</h1>;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ModalButton({ button, modal, openRef }) {\n  const [show, setShow] = useState(false);\n  const onHide = () => setShow(false);\n  const onClick = () => setShow(true);\n  const Button = button;\n  const Modal = modal;\n  if (openRef) {\n    openRef.current = onClick;\n  }\n  return (\n    <>\n      <Button onClick={onClick} />\n      <Modal onHide={onHide} show={show} />\n    </>\n  );\n}\n\nModalButton.propTypes = {\n  button: PropTypes.elementType.isRequired,\n  modal: PropTypes.elementType.isRequired,\n  openRef: PropTypes.shape({ current: PropTypes.any }),\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst sizeClasses = {\n  small: 'btn-sm',\n  large: 'btn-lg',\n  normal: '',\n};\n\nexport function SplitButton({\n  children,\n  faIcon,\n  variant,\n  size,\n  style,\n  className,\n  disabled,\n  ...props\n}) {\n  const classNames = classnames(\n    'btn',\n    `btn-${disabled ? 'secondary' : variant}`,\n    'btn-icon-split',\n    sizeClasses[size],\n    className,\n    { disabled }\n  );\n\n  const styles = { cursor: 'pointer', ...style };\n  return (\n    <span className={classNames} style={styles} {...props}>\n      <span className=\"icon text-white-50\">\n        <i className={`fas fa-${faIcon}`}></i>\n      </span>\n      <span className=\"text\">{children}</span>\n    </span>\n  );\n}\n\nSplitButton.defaultProps = {\n  variant: 'primary',\n  size: 'normal',\n};\n","import React from 'react';\nimport { SplitButton } from './SplitButton';\nimport PropTypes from 'prop-types';\nimport { useDictionary } from './Lang';\n\nexport default function CreateButton({ onClick }) {\n  const { buttons } = useDictionary();\n  return (\n    <SplitButton faIcon=\"plus\" size=\"small\" onClick={onClick}>\n      {buttons.create}\n    </SplitButton>\n  );\n}\n\nCreateButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function TableButton({ faIcon, variant, ...props }) {\n  return (\n    <Button className=\"bg-transparent border-0 p-0 mx-1\" {...props}>\n      <i className={`fas fa-${faIcon} fa-fw text-${variant}`} />\n    </Button>\n  );\n}\n\nTableButton.propTypes = {\n  faIcon: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport TableButton from './TableButton';\n\nexport default function EditTableButton(props) {\n  return <TableButton faIcon=\"edit\" variant=\"primary\" {...props} />;\n}\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport function FormControl({ label, inline, ...props }) {\n  return (\n    <Form.Group className=\"mb-3\" as={!!inline && Row}>\n      <Form.Label column={!!inline}>{label}</Form.Label>\n      <FormControl.Input inline={inline} {...props} />\n    </Form.Group>\n  );\n}\n\nFormControl.Input = ({ inline, formData, feedback, ...props }) => {\n  const wrap = inline ? c => <Col sm={inline}>{c}</Col> : c => c;\n\n  return wrap(\n    <>\n      <Form.Control\n        ref={formData}\n        defaultValue={formData.default()}\n        {...props}\n      />\n      <Form.Control.Feedback type=\"invalid\">{feedback}</Form.Control.Feedback>\n    </>\n  );\n};\n\nFormControl.propTypes = {\n  formData: PropTypes.shape({ current: PropTypes.any, init: PropTypes.any }),\n  feedback: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  inline: PropTypes.number,\n};\n\nFormControl.defaultProps = {\n  inline: 0,\n};\n","import React from 'react';\nimport { SplitButton } from './SplitButton';\nimport PropTypes from 'prop-types';\nimport { useDictionary } from './Lang';\n\nexport default function SaveButton(props) {\n  const { buttons } = useDictionary();\n\n  return (\n    <SplitButton faIcon=\"save\" size=\"small\" {...props}>\n      {buttons.save}\n    </SplitButton>\n  );\n}\n\nSaveButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { SplitButton } from './SplitButton';\nimport PropTypes from 'prop-types';\nimport { useDictionary } from './Lang';\n\nexport default function CancelButton({ onClick }) {\n  const { buttons } = useDictionary();\n  return (\n    <SplitButton variant=\"danger\" faIcon=\"times\" size=\"small\" onClick={onClick}>\n      {buttons.cancel}\n    </SplitButton>\n  );\n}\n\nCancelButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { useState, useRef } from 'react';\nimport SaveButton from './SaveButton';\nimport CancelButton from './CancelButton';\nimport { Modal, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function FormModal({\n  title,\n  show,\n  onHide,\n  onSave,\n  autoFocusRef,\n  formData,\n  children,\n}) {\n  const [validated, setValidated] = useState(false);\n  const form = useRef();\n  function handleSave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const isValid = form.current.checkValidity();\n    setValidated(true);\n    if (!isValid) {\n      return;\n    }\n    if (formData.changed()) {\n      const input = formData.value();\n      onSave(input);\n    }\n    onHide();\n    setValidated(false);\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      onEntered={() => autoFocusRef.current.focus()}\n    >\n      <Form validated={validated} ref={form} onSubmit={handleSave}>\n        <Modal.Header\n          closeButton\n          className=\"m-0 font-weight-bold text-primary bg-light\"\n        >\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer className=\" bg-light\">\n          <CancelButton onClick={onHide} />\n          <SaveButton onClick={handleSave} />\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nFormModal.propTypes = {\n  autoFocusRef: PropTypes.shape({ current: PropTypes.any }).isRequired,\n  children: PropTypes.node.isRequired,\n  onHide: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { useState, useRef } from 'react';\n\nfunction simpleFormData({ $init, $process, $default }, getRoot) {\n  const process = $process || (v => v);\n  const formData = { current: null };\n  const _default =\n    typeof $default === 'function' ? () => $default(getRoot()) : () => $default;\n\n  formData.value = () => {\n    if (formData.current === null) {\n      return null;\n    }\n    return process(formData.current.value);\n  };\n\n  formData.changed = () => {\n    if (formData.current === null) {\n      return $init !== null;\n    }\n    return formData.current.value !== $init;\n  };\n\n  formData.default = () => ($init !== null ? $init : _default());\n\n  formData.init = () => $init;\n\n  return formData;\n}\n\nfunction arrayFormData({ $model, $init }, rerender, getRoot) {\n  const formData = $init.map(v => createFormData($model(v), rerender), getRoot);\n  formData._originalPush = formData.push;\n\n  formData.value = () => {\n    return formData.map(v => v.value());\n  };\n\n  formData.changed = () => {\n    return formData.length !== $init.length || formData.some(v => v.changed());\n  };\n\n  formData.push = v => {\n    formData._originalPush(createFormData($model(v), rerender));\n    rerender();\n  };\n\n  formData.removeAt = idx => {\n    formData.splice(idx, 1);\n    rerender();\n  };\n\n  return formData;\n}\n\nfunction compositeFormData({ $includeAllValues, ...model }, rerender, getRoot) {\n  const formData = Object.keys(model).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: createFormData(model[key], rerender, getRoot),\n    }),\n    {}\n  );\n\n  formData.changed = () => {\n    return Object.keys(model).some(k => formData[k].changed());\n  };\n\n  formData.value = () => {\n    return Object.keys(model).reduce((acc, key) => {\n      if (!formData[key].changed() && !$includeAllValues) {\n        return acc;\n      }\n      return { ...acc, [key]: formData[key].value() };\n    }, {});\n  };\n\n  return formData;\n}\n\nfunction createFormData(model, rerender, getRoot) {\n  if (Object.prototype.hasOwnProperty.call(model, '$init')) {\n    if (Object.prototype.hasOwnProperty.call(model, '$model')) {\n      return arrayFormData(model, rerender, getRoot);\n    }\n    return simpleFormData(model, getRoot);\n  }\n  return compositeFormData(model, rerender, getRoot);\n}\n\nexport function useFormData(model) {\n  const [, setValue] = useState(false);\n  const rerender = () => setValue(v => !v);\n  let formData,\n    getRoot = () => formData;\n  formData = createFormData(model, rerender, getRoot);\n  const ref = useRef(formData);\n  return ref.current;\n}\n","export default class Amount {\n  static parse(string) {\n    if (string === null || string === '') {\n      return null;\n    }\n    return Math.round(Number(string) * 100);\n  }\n\n  static zero() {\n    return 0;\n  }\n\n  static format(amount, kSeparator = true) {\n    if (amount === null) {\n      return null;\n    }\n    const fixed = (amount / 100).toFixed(2);\n    if (!kSeparator) {\n      return fixed;\n    }\n    var parts = fixed.split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n    return parts.join('.');\n  }\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport classnames from 'classnames';\n\nexport function Panel({\n  header,\n  headerClassName,\n  body,\n  bodyClassName,\n  className,\n}) {\n  const classNames = classnames('card', 'shadow', 'mb-4', className);\n  const headerClassNames = classnames(headerClassName, 'card-header');\n  return (\n    <div className={classNames}>\n      {header && <div className={headerClassNames}>{header}</div>}\n      {body && <Card.Body className={bodyClassName}>{body}</Card.Body>}\n    </div>\n  );\n}\n\nPanel.Title = function({ children }) {\n  return <h6 className=\"m-0 font-weight-bold text-primary\">{children}</h6>;\n};\n\nPanel.HeaderWithButton = function({ title, children }) {\n  return (\n    <div className=\"d-flex justify-content-between align-items-center\">\n      <Panel.Title>{title}</Panel.Title>\n      <div>{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport classnames from 'classnames';\n\nexport default function RefreshButton({ className, ...props }) {\n  const classes = classnames('btn-sm', 'btn-secondary', className);\n  return (\n    <Button className={classes} {...props}>\n      <i className=\"fas fa-fw fa-sync-alt\" />\n    </Button>\n  );\n}\n\nRefreshButton.propTypes = {\n  className: PropTypes.string,\n};\n","import Spinner from '../template/Utilities/Spinner';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ErrorMessageList({ errorMessage, subErrors }) {\n  return (\n    <>\n      {errorMessage}\n      <ul>\n        {subErrors.map((e, idx) => (\n          <li key={idx}>{e}</li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction ErrorMessage({ error }) {\n  const subErrors = error.networkError\n    ? error.networkError.result.errors\n    : error.graphQLErrors.map(e => `${e.path.join('.')}: ${e.message}`);\n  return (\n    <div className=\"text-danger\">\n      <i className=\"fas fa-fw fa-exclamation-triangle\" />\n      <ErrorMessageList errorMessage={error.message} subErrors={subErrors} />\n    </div>\n  );\n}\n\nexport function WithQuery({ query, showError, children, ...props }) {\n  const { loading, error } = query;\n  return loading ? (\n    <Spinner {...props} />\n  ) : error ? (\n    showError && <ErrorMessage error={error} />\n  ) : (\n    children(query)\n  );\n}\n\nWithQuery.propTypes = {\n  children: PropTypes.func.isRequired,\n  query: PropTypes.shape({\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.any,\n  }),\n  showError: PropTypes.bool,\n};\n\nWithQuery.defaultProps = {\n  showError: true,\n};\n","import React from 'react';\nimport { Panel } from '../template/Utilities/Panel';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport RefreshButton from '../template/Utilities/RefreshButton';\nimport { WithQuery } from '../gql/WithQuery';\nimport PropTypes from 'prop-types';\n\nexport function QueryTablePanel({\n  title,\n  query,\n  buttons,\n  getData,\n  columns,\n  ...props\n}) {\n  const paddedFirstColumn = {\n    ...columns[0],\n    classes: 'pl-3',\n    headerClasses: 'pl-3',\n  };\n  const modifiedColumns = [\n    paddedFirstColumn,\n    ...columns.slice(1, columns.length),\n  ];\n\n  return (\n    <Panel\n      headerClassName=\"p-2 pl-3\"\n      header={\n        <Panel.HeaderWithButton title={title}>\n          <WithQuery query={query} size=\"sm\" showError={false}>\n            {({ refetch }) => (\n              <>\n                <RefreshButton onClick={() => refetch()} className=\"mr-1\" />\n                {buttons}\n              </>\n            )}\n          </WithQuery>\n        </Panel.HeaderWithButton>\n      }\n      bodyClassName=\"p-0\"\n      body={\n        <WithQuery query={query}>\n          {({ data }) => (\n            <BootstrapTable\n              bootstrap4\n              classes=\"table-layout-auto table-sm m-0\"\n              data={getData(data)}\n              striped\n              hover\n              bordered={false}\n              columns={modifiedColumns}\n              {...props}\n            />\n          )}\n        </WithQuery>\n      }\n    />\n  );\n}\n\nQueryTablePanel.propTypes = {\n  title: PropTypes.string.isRequired,\n  buttons: PropTypes.node,\n  getData: PropTypes.func.isRequired,\n  query: PropTypes.shape({\n    data: PropTypes.any,\n    refetch: PropTypes.func,\n  }).isRequired,\n};\n","import React, { useRef } from 'react';\nimport Page from './template/Page/Page';\nimport PageHeader from './template/Page/PageHeader';\nimport ModalButton from './template/Utilities/ModalButton';\nimport CreateButton from './template/Utilities/CreateButton';\nimport EditTableButton from './template/Utilities/EditTableButton';\nimport { FormControl } from './template/Utilities/FormControl';\nimport FormModal from './template/Utilities/FormModal';\nimport { useFormData } from './template/Utilities/useFormData';\nimport Amount from '../model/Amount';\nimport {\n  useCreateAccount,\n  useGetAccounts,\n  useUpdateAccount,\n} from './gql/accounts';\nimport { QueryTablePanel } from './gql/QueryTablePanel';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { useDictionary, withColumnNames } from './template/Utilities/Lang';\n\nconst columns = [\n  { dataField: 'name' },\n  {\n    dataField: 'balance',\n    align: 'right',\n    headerAlign: 'right',\n    formatter: Amount.format,\n  },\n  {\n    dataField: 'actions',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdateAccountButton account={row} />\n        <span style={{ cursor: 'pointer' }}>\n          <i className=\"fas fa-archive fa-fw\" />\n        </span>\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nfunction AccountModal({ init, ...props }) {\n  const { accounts } = useDictionary();\n  const formData = useFormData({\n    name: { $init: init.name },\n  });\n  return (\n    <FormModal formData={formData} autoFocusRef={formData.name} {...props}>\n      <FormControl\n        label={accounts.modal.labels.name}\n        inline={10}\n        formData={formData.name}\n        feedback=\"Provide name\"\n      />\n    </FormModal>\n  );\n}\n\nfunction UpdateAccountButton({ account }) {\n  const [updateAccount] = useUpdateAccount();\n  const { accounts } = useDictionary();\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <AccountModal\n          init={account}\n          title={accounts.modal.editTitle}\n          onSave={input => updateAccount(account.id, input)}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nfunction CreateAccountButton({ openRef }) {\n  const [createAccount] = useCreateAccount();\n  const { accounts } = useDictionary();\n  return (\n    <ModalButton\n      openRef={openRef}\n      button={CreateButton}\n      modal={props => (\n        <AccountModal\n          init={{ name: '' }}\n          title={accounts.modal.createTitle}\n          onSave={createAccount}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nconst keyMap = {\n  openModal: 'n',\n};\nconst keyHandlers = openCreateModal => ({\n  openModal: () => openCreateModal.current(),\n});\n\nexport default function Accounts() {\n  const query = useGetAccounts();\n  const openCreateModal = useRef();\n  const { sidebar, accounts } = useDictionary();\n\n  return (\n    <GlobalHotKeys keyMap={keyMap} handlers={keyHandlers(openCreateModal)}>\n      <Page>\n        <PageHeader>{sidebar.pages.accounts}</PageHeader>\n        <QueryTablePanel\n          title={accounts.table.title}\n          query={query}\n          getData={data => data.accounts}\n          buttons={<CreateAccountButton openRef={openCreateModal} />}\n          columns={withColumnNames(columns, accounts.table.columns)}\n          keyField=\"id\"\n        />\n      </Page>\n    </GlobalHotKeys>\n  );\n}\n","import React, { useState } from 'react';\nimport { Form, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { FormControl } from './FormControl';\n\nexport function OptionalFormControl({\n  initEnabled,\n  label,\n  inline,\n  formData,\n  ...props\n}) {\n  const [enabled, setEnabled] = useState(initEnabled);\n  const toggleEnabled = () => setEnabled(v => !v);\n  return (\n    <Form.Group className=\"mb-3\" as={!!inline && Row}>\n      <Form.Label column={!!inline}>\n        <Form.Check custom type=\"switch\">\n          <Form.Check.Input checked={enabled} onChange={toggleEnabled} />\n          <Form.Check.Label onClick={toggleEnabled}>{label}</Form.Check.Label>\n        </Form.Check>\n      </Form.Label>\n      {enabled && (\n        <FormControl.Input\n          autoFocus\n          formData={formData}\n          inline={inline}\n          {...props}\n        />\n      )}\n    </Form.Group>\n  );\n}\n\nOptionalFormControl.propTypes = {\n  initEnabled: PropTypes.bool,\n  formData: PropTypes.shape({ current: PropTypes.any, init: PropTypes.any }),\n  feedback: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  inline: PropTypes.number,\n};\n\nOptionalFormControl.defaultProps = {\n  inline: 0,\n};\n","import PropTypes from 'prop-types';\n\nexport const Amount = PropTypes.number;\n\nexport const Account = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n});\n\nexport const Expense = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  totalBalance: Amount.isRequired,\n  location: PropTypes.string,\n  account: Account,\n});\n\nexport const Envelope = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n});\n\nexport const Category = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  envelope: Envelope,\n});\n","import React from 'react';\nimport Amount from '../../model/Amount';\nimport { FormControl } from '../template/Utilities/FormControl';\nimport { OptionalFormControl } from '../template/Utilities/OptionalFormControl';\nimport FormModal from '../template/Utilities/FormModal';\nimport { useFormData } from '../template/Utilities/useFormData';\nimport PropTypes from 'prop-types';\nimport * as model from '../../model/propTypes';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function EnvelopeModal({ init, ...props }) {\n  const { envelopes } = useDictionary();\n  const formData = useFormData({\n    name: { $init: init.name },\n    limit: { $init: Amount.format(init.limit, false), $process: Amount.parse },\n  });\n  return (\n    <FormModal formData={formData} autoFocusRef={formData.name} {...props}>\n      <FormControl\n        label={envelopes.modal.labels.name}\n        inline={9}\n        feedback=\"Provide a name for the envelope\"\n        required\n        formData={formData.name}\n      />\n      <OptionalFormControl\n        initEnabled={!!init.limit}\n        inline={9}\n        label={envelopes.modal.labels.limit}\n        feedback=\"Provide a limit for the envelope\"\n        type=\"number\"\n        required\n        formData={formData.limit}\n        step=\"0.01\"\n      />\n    </FormModal>\n  );\n}\n\nEnvelopeModal.propTypes = {\n  init: PropTypes.shape({\n    name: PropTypes.string,\n    limit: model.Amount,\n  }).isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ModalButton from '../template/Utilities/ModalButton';\nimport CreateButton from '../template/Utilities/CreateButton';\nimport { useCreateEnvelope } from '../gql/envelopes';\nimport { EnvelopeModal } from './EnvelopeModal';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function CreateEnvelopeButton({ openRef }) {\n  const [createEnvelope] = useCreateEnvelope();\n  const { envelopes } = useDictionary();\n  return (\n    <ModalButton\n      openRef={openRef}\n      button={CreateButton}\n      modal={props => (\n        <EnvelopeModal\n          title={envelopes.modal.createTitle}\n          init={{ name: '', limit: null }}\n          onSave={createEnvelope}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport TableButton from './TableButton';\n\nexport default function ArchiveTableButton(props) {\n  return <TableButton faIcon=\"archive\" variant=\"secondary\" {...props} />;\n}\n","import React from 'react';\nimport ModalButton from '../template/Utilities/ModalButton';\nimport EditTableButton from '../template/Utilities/EditTableButton';\nimport { useUpdateEnvelope } from '../gql/envelopes';\nimport { EnvelopeModal } from './EnvelopeModal';\nimport PropTypes from 'prop-types';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function UpdateEnvelopeButton({ envelope }) {\n  const [updateEnvelope] = useUpdateEnvelope();\n  const { envelopes } = useDictionary();\n\n  const onSave = input => {\n    updateEnvelope(envelope.id, input);\n  };\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <EnvelopeModal\n          title={envelopes.modal.editTitle}\n          init={envelope}\n          onSave={onSave}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nUpdateEnvelopeButton.propTypes = {\n  envelope: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport { useGetEnvelopes } from '../gql/envelopes';\nimport { CreateEnvelopeButton } from './CreateEnvelopeButton';\nimport Amount from '../../model/Amount';\nimport ArchiveTableButton from '../template/Utilities/ArchiveTableButton';\nimport { UpdateEnvelopeButton } from './UpdateEnvelopeButton';\nimport { QueryTablePanel } from '../gql/QueryTablePanel';\nimport { withColumnNames, useDictionary } from '../template/Utilities/Lang';\n\nconst columns = [\n  { dataField: 'name' },\n  {\n    dataField: 'limit',\n    formatter: Amount.format,\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    dataField: 'balance',\n    formatter: Amount.format,\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    dataField: 'overLimit',\n    align: 'right',\n    headerAlign: 'right',\n    formatter: (cell, row) =>\n      row.limit !== null && row.limit < row.balance\n        ? Amount.format(row.balance - row.limit)\n        : '',\n  },\n  {\n    dataField: 'actions',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdateEnvelopeButton envelope={row} />\n        <ArchiveTableButton />\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nexport function EnvelopesListPanel({ createFunRef }) {\n  const query = useGetEnvelopes();\n  const { envelopes } = useDictionary();\n  return (\n    <QueryTablePanel\n      title={envelopes.table.title}\n      query={query}\n      buttons={<CreateEnvelopeButton openRef={createFunRef} />}\n      getData={data => data.envelopes}\n      columns={withColumnNames(columns, envelopes.table.columns)}\n      keyField=\"id\"\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useBudget } from './budget';\n\nconst GET_CATEGORIES = gql`\n  query GetCategories($budgetID: ID!) {\n    categories(budgetID: $budgetID) {\n      id\n      name\n      envelope {\n        id\n        name\n      }\n      description\n    }\n  }\n`;\n\nconst CREATE_CATEGORY = gql`\n  mutation CreateCategory($budgetID: ID!, $input: CategoryInput!) {\n    createCategory(budgetID: $budgetID, in: $input) {\n      id\n      name\n      envelope {\n        id\n        name\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_CATEGORY = gql`\n  mutation UpdateCategory($budgetID: ID!, $id: ID!, $input: CategoryUpdate!) {\n    updateCategory(budgetID: $budgetID, id: $id, in: $input) {\n      id\n      name\n      envelope {\n        id\n        name\n      }\n      description\n    }\n  }\n`;\n\nexport function useCreateCategory() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(CREATE_CATEGORY, {\n    update: (cache, { data: { createCategory } }) => {\n      const { categories } = cache.readQuery({\n        query: GET_CATEGORIES,\n        variables: { budgetID: selectedBudget.id },\n      });\n      cache.writeQuery({\n        query: GET_CATEGORIES,\n        variables: { budgetID: selectedBudget.id },\n        data: {\n          categories: categories.concat([createCategory]),\n        },\n      });\n    },\n  });\n  const wrapper = input => {\n    mutation({ variables: { budgetID: selectedBudget.id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useUpdateCategory() {\n  const { selectedBudget } = useBudget();\n  const [mutation, ...rest] = useMutation(UPDATE_CATEGORY);\n  const wrapper = (id, input) => {\n    mutation({ variables: { budgetID: selectedBudget.id, id, input } });\n  };\n  return [wrapper, ...rest];\n}\n\nexport function useGetCategories() {\n  const { selectedBudget } = useBudget();\n  return useQuery(GET_CATEGORIES, {\n    variables: { budgetID: selectedBudget.id },\n  });\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nexport function Combobox({ allowedValues, _ref, defaultValue, className }) {\n  const defaultValueObject = allowedValues.find(v => v.id === defaultValue);\n  const [show, setShow] = useState(false);\n  const [filter, setFilter] = useState(\n    defaultValueObject ? defaultValueObject.label : ''\n  );\n  const [selectedIdx, setSelectedIdx] = useState(0);\n  const menuRef = useRef();\n  const classNames = classnames('input-group', className);\n  const filtered = allowedValues.filter(v =>\n    v.label.toLowerCase().includes(filter.toLowerCase())\n  );\n  useEffect(() => {\n    _ref.current = { value: defaultValue };\n    // eslint-disable-next-line\n  }, []);\n  function onClick(id) {\n    const selectedLabel = allowedValues.find(v => v.id === id).label;\n    setShow(false);\n    setFilter(selectedLabel);\n    _ref.current = { value: id };\n  }\n  function onInputChange(e) {\n    const value = e.target.value;\n    setShow(true);\n    setFilter(value);\n    setSelectedIdx(0);\n    const selected = allowedValues.find(v => v.label === value);\n    if (selected) {\n      _ref.current = { value: selected.id };\n    }\n  }\n  function onInputBlur() {\n    setShow(false);\n    const selected = allowedValues.find(v => v.label === filter);\n    if (!selected) {\n      setFilter('');\n    }\n  }\n  function onKeyDown(e) {\n    if (e.keyCode === 40) {\n      // up\n      e.preventDefault();\n      if (selectedIdx >= filtered.length - 1) {\n        setSelectedIdx(0);\n      } else {\n        setSelectedIdx(v => v + 1);\n      }\n    } else if (e.keyCode === 38) {\n      // down\n      e.preventDefault();\n      if (selectedIdx <= 0) {\n        setSelectedIdx(filtered.length - 1);\n      } else {\n        setSelectedIdx(v => v - 1);\n      }\n    } else if (e.keyCode === 13 && show) {\n      e.preventDefault();\n      onClick(filtered[selectedIdx].id);\n    }\n  }\n  return (\n    <div className={classNames}>\n      <input\n        className=\"form-control\"\n        value={filter}\n        type=\"text\"\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n        onKeyDown={onKeyDown}\n      />\n      <button\n        className=\"btn btn-secondary dropdown-toggle dropdown-toggle-split no-arrow\"\n        data-toggle=\"dropdown\"\n        data-reference=\"parent\"\n        data-flip=\"false\"\n        style={{\n          maxWidth: '2rem',\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n          margin: -1,\n        }}\n      />\n      <ul\n        ref={menuRef}\n        role=\"menu\"\n        className={classnames('dropdown-menu', { show })}\n        style={{\n          maxHeight: '200px',\n          overflowY: 'auto',\n        }}\n      >\n        {filtered.map((v, idx) => (\n          <li\n            className={`dropdown-item ${idx === selectedIdx ? 'active' : ''}`}\n            onClick={() => onClick(v.id)}\n            key={v.id}\n          >\n            {v.label}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport function InlineFormControl({ label, size, feedback, children }) {\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column>{label}</Form.Label>\n      <Col sm={size}>\n        {children}\n        {feedback && (\n          <Form.Control.Feedback type=\"invalid\">\n            {feedback}\n          </Form.Control.Feedback>\n        )}\n      </Col>\n    </Form.Group>\n  );\n}\n\nInlineFormControl.propTypes = {\n  children: PropTypes.element,\n  feedback: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  size: PropTypes.number,\n};\n\nInlineFormControl.defaultProps = {\n  inline: 0,\n};\n","import React from 'react';\nimport FormModal from '../template/Utilities/FormModal';\nimport { useFormData } from '../template/Utilities/useFormData';\nimport { FormControl } from '../template/Utilities/FormControl';\nimport PropTypes from 'prop-types';\nimport { useGetEnvelopes } from '../gql/envelopes';\nimport { WithQuery } from '../gql/WithQuery';\nimport { Combobox } from '../template/Utilities/Combobox';\nimport { InlineFormControl } from '../template/Utilities/InlineFormControl';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function CategoryModal({ init, ...props }) {\n  const query = useGetEnvelopes();\n  const { categories } = useDictionary();\n  const formData = useFormData({\n    name: { $init: init.name },\n    envelopeID: {\n      $init: init.envelope.id,\n    },\n    description: { $init: init.description },\n  });\n  return (\n    <FormModal autoFocusRef={formData.name} formData={formData} {...props}>\n      <WithQuery query={query}>\n        {({ data }) => (\n          <>\n            <FormControl\n              label={categories.modal.labels.name}\n              inline={9}\n              formData={formData.name}\n              feedback=\"Provide name\"\n            />\n            <InlineFormControl\n              size={9}\n              label={categories.modal.labels.envelope}\n            >\n              <Combobox\n                allowedValues={data.envelopes.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n                _ref={formData.envelopeID}\n                defaultValue={formData.envelopeID.default()}\n              />\n            </InlineFormControl>\n            <FormControl\n              label={categories.modal.labels.description}\n              inline={9}\n              formData={formData.description}\n              feedback=\"Provide description\"\n            />\n          </>\n        )}\n      </WithQuery>\n    </FormModal>\n  );\n}\n\nCategoryModal.propTypes = {\n  init: PropTypes.shape({\n    name: PropTypes.string,\n    envelope: PropTypes.shape({ id: PropTypes.string }).isRequired,\n  }),\n  onSave: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ModalButton from '../template/Utilities/ModalButton';\nimport CreateButton from '../template/Utilities/CreateButton';\nimport { useCreateCategory } from '../gql/categories';\nimport { CategoryModal } from './CategoryModal';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function CreateCategoryButton({ openRef }) {\n  const [createCategory] = useCreateCategory();\n  const { categories } = useDictionary();\n  return (\n    <ModalButton\n      openRef={openRef}\n      button={CreateButton}\n      modal={props => (\n        <CategoryModal\n          title={categories.modal.createTitle}\n          init={{ name: '', envelope: { id: null }, description: '' }}\n          onSave={createCategory}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport ModalButton from '../template/Utilities/ModalButton';\nimport EditTableButton from '../template/Utilities/EditTableButton';\nimport { CategoryModal } from './CategoryModal';\nimport PropTypes from 'prop-types';\nimport { useUpdateCategory } from '../gql/categories';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nexport function UpdateCategoryButton({ category }) {\n  const [updateEnvelope] = useUpdateCategory();\n  const { categories } = useDictionary();\n  const onSave = input => {\n    updateEnvelope(category.id, input);\n  };\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <CategoryModal\n          title={categories.modal.editTitle}\n          init={category}\n          onSave={onSave}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nUpdateCategoryButton.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport { useGetCategories } from '../gql/categories';\nimport ArchiveTableButton from '../template/Utilities/ArchiveTableButton';\nimport { QueryTablePanel } from '../gql/QueryTablePanel';\nimport { CreateCategoryButton } from './CreateCategoryButton';\nimport { UpdateCategoryButton } from './UpdateCategoryButton';\nimport { useDictionary, withColumnNames } from '../template/Utilities/Lang';\n\nconst columns = [\n  { dataField: 'name' },\n  {\n    dataField: 'envelope',\n    formatter: a => a.name,\n  },\n  { dataField: 'description' },\n  {\n    dataField: 'actions',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdateCategoryButton category={row} />\n        <ArchiveTableButton />\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nexport function CategoriesListPanel({ createFunRef }) {\n  const query = useGetCategories();\n  const { categories } = useDictionary();\n  return (\n    <QueryTablePanel\n      buttons={<CreateCategoryButton openRef={createFunRef} />}\n      title={categories.table.title}\n      query={query}\n      getData={data => data.categories}\n      columns={withColumnNames(columns, categories.table.columns)}\n      keyField=\"id\"\n    />\n  );\n}\n","import React, { useRef } from 'react';\nimport Page from '../template/Page/Page';\nimport PageHeader from '../template/Page/PageHeader';\nimport { EnvelopesListPanel } from './EnvelopesListPanel';\nimport { CategoriesListPanel } from '../Categories/CategoriesListPanel';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { useDictionary } from '../template/Utilities/Lang';\n\nconst keyMap = {\n  createEnvelope: 'e',\n  createCategory: 'c',\n};\n\nconst handlers = (createEnvelopeFunRef, createCategoryFunRef) => ({\n  createEnvelope: () => createEnvelopeFunRef.current(),\n  createCategory: () => createCategoryFunRef.current(),\n});\n\nexport default function EnvelopesPage() {\n  const createEnvelopeFunRef = useRef();\n  const createCategoryFunRef = useRef();\n  const { sidebar } = useDictionary();\n  return (\n    <Page>\n      <GlobalHotKeys\n        keyMap={keyMap}\n        handlers={handlers(createEnvelopeFunRef, createCategoryFunRef)}\n      />\n      <PageHeader>{sidebar.pages.envelopes}</PageHeader>\n      <EnvelopesListPanel createFunRef={createEnvelopeFunRef} />\n      <CategoriesListPanel createFunRef={createCategoryFunRef} />\n    </Page>\n  );\n}\n","export default class Day {\n  constructor(year, month, day) {\n    this.year = year;\n    this.month = month;\n    this.day = day;\n  }\n\n  static fromDate(date) {\n    return new Date(date.getYear(), date.getMonth(), date.getDate());\n  }\n\n  format() {\n    return `${this.year}-${String(this.month).padStart(2, '0')}-${String(\n      this.day\n    ).padStart(2, '0')}`;\n  }\n}\n","import Day from './Day';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default class Month {\n  constructor(year, month) {\n    this.year = year;\n    this.month = month;\n  }\n  static parse(string) {\n    const [year, month] = string.split('-');\n    return new Month(Number(year), Number(month));\n  }\n\n  firstDay() {\n    return new Day(this.year, this.month, 1);\n  }\n\n  lastDay() {\n    const date = new Date(this.year, this.month, 0);\n    return new Day(this.year, this.month, date.getDate());\n  }\n\n  pretty() {\n    return `${monthNames[this.month - 1]} ${this.year}`;\n  }\n}\n","import React from 'react';\nimport Page from './template/Page/Page';\nimport PageHeader from './template/Page/PageHeader';\nimport ModalButton from './template/Utilities/ModalButton';\nimport CreateButton from './template/Utilities/CreateButton';\nimport EditTableButton from './template/Utilities/EditTableButton';\nimport { FormControl } from './template/Utilities/FormControl';\nimport FormModal from './template/Utilities/FormModal';\nimport { useFormData } from './template/Utilities/useFormData';\nimport Amount from '../model/Amount';\nimport { QueryTablePanel } from './gql/QueryTablePanel';\nimport {\n  useCreateExpense,\n  useGetCurrentExpenses,\n  useUpdateExpense,\n  useDeleteExpense,\n} from './gql/expenses';\nimport { useGetAccounts } from './gql/accounts';\nimport { useGetCategories } from './gql/categories';\nimport { WithQuery } from './gql/WithQuery';\nimport { useBudget } from './gql/budget';\nimport Month from '../model/Month';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport TableButton from './template/Utilities/TableButton';\nimport { useDictionary, withColumnNames } from './template/Utilities/Lang';\nimport { Combobox } from './template/Utilities/Combobox';\nimport { InlineFormControl } from './template/Utilities/InlineFormControl';\n\nconst columns = [\n  { dataField: 'title' },\n  { dataField: 'date' },\n  {\n    dataField: 'account',\n    formatter: a => a.name,\n  },\n  {\n    dataField: 'totalAmount',\n    text: 'Amount',\n    formatter: Amount.format,\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    dataField: 'actions',\n    text: '',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdateExpenseButton expense={row} />\n        <DeleteExpenseButton expense={row} />\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nconst rowClasses = (row, rowIndex) => {\n  return rowIndex % 2 === 0 && 'table-striped';\n};\n\nconst expandRow = {\n  className: 'background-color-white',\n  renderer: row => (\n    <table className=\"table table-sm mb-0\">\n      <tbody>\n        {row.categories.map((category, idx) => (\n          <tr key={idx}>\n            <td className=\"pl-3\">{category.category.name}</td>\n            <td>{Amount.format(category.amount)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ),\n};\n\nfunction CategoriesInput({ formData }) {\n  const query = useGetCategories();\n  const { expenses } = useDictionary();\n\n  return (\n    <WithQuery query={query}>\n      {({ data }) => (\n        <>\n          <small className=\"d-flex align-items-center\">\n            {expenses.modal.labels.categories}\n            <TableButton\n              faIcon=\"plus\"\n              variant=\"primary\"\n              size=\"sm\"\n              onClick={() =>\n                formData.push({\n                  category: { id: null },\n                  amount: null,\n                })\n              }\n            />\n          </small>\n          {formData.map((categoryFormData, idx) => (\n            <Form.Group\n              as={Row}\n              key={categoryFormData.categoryID.init() || idx}\n              className=\"d-flex align-items-center\"\n            >\n              <Col sm={7}>\n                <Combobox\n                  _ref={categoryFormData.categoryID}\n                  defaultValue={categoryFormData.categoryID.init()}\n                  allowedValues={data.categories.map(({ id, name }) => ({\n                    id,\n                    label: name,\n                  }))}\n                />\n              </Col>\n              <Col>\n                <Form.Control\n                  type=\"number\"\n                  required\n                  placeholder={expenses.modal.labels.amount}\n                  defaultValue={categoryFormData.amount.init()}\n                  ref={categoryFormData.amount}\n                  step=\"0.01\"\n                />\n              </Col>\n              <Col sm={1}>\n                <TableButton\n                  faIcon=\"minus\"\n                  variant=\"danger\"\n                  size=\"sm\"\n                  onClick={() => {\n                    console.log(categoryFormData, idx);\n                    formData.removeAt(idx);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n          ))}\n        </>\n      )}\n    </WithQuery>\n  );\n}\n\nfunction ExpenseModal({ init, ...props }) {\n  const { selectedBudget } = useBudget();\n  const { expenses } = useDictionary();\n  const accountsQuery = useGetAccounts();\n  const formData = useFormData({\n    title: { $init: init.title },\n    date: { $init: init.date },\n    accountID: { $init: init.account.id },\n    categories: {\n      $init: init.categories,\n      $model: c => ({\n        categoryID: { $init: c.category.id },\n        amount: {\n          $init: Amount.format(c.amount, false),\n          $process: Amount.parse,\n        },\n        $includeAllValues: true,\n      }),\n    },\n  });\n  const month = Month.parse(selectedBudget.currentMonth.month);\n  const first = month.firstDay();\n  const last = month.lastDay();\n  return (\n    <FormModal formData={formData} autoFocusRef={formData.title} {...props}>\n      <WithQuery query={accountsQuery}>\n        {({ data: accountsData }) => (\n          <>\n            <FormControl\n              label={expenses.modal.labels.title}\n              inline={10}\n              formData={formData.title}\n              feedback=\"Provide name\"\n              required\n            />\n            <FormControl\n              label={expenses.modal.labels.date}\n              inline={10}\n              formData={formData.date}\n              feedback=\"Provide date\"\n              type=\"date\"\n              required\n              min={first.format()}\n              max={last.format()}\n            />\n            <InlineFormControl label={expenses.modal.labels.account} size={9}>\n              <Combobox\n                _ref={formData.accountID}\n                defaultValue={formData.accountID.init()}\n                allowedValues={accountsData.accounts.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n              />\n            </InlineFormControl>\n            <CategoriesInput formData={formData.categories} />\n          </>\n        )}\n      </WithQuery>\n    </FormModal>\n  );\n}\n\nfunction DeleteExpenseButton({ expense }) {\n  const [deleteExpense] = useDeleteExpense();\n  return (\n    <TableButton\n      faIcon=\"trash-alt\"\n      variant=\"secondary\"\n      onClick={() => deleteExpense(expense.id)}\n    />\n  );\n}\n\nfunction UpdateExpenseButton({ expense }) {\n  const [updateExpense] = useUpdateExpense();\n  const { expenses } = useDictionary();\n\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <ExpenseModal\n          init={expense}\n          title={expenses.modal.editTitle}\n          onSave={input => updateExpense(expense.id, input)}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nfunction CreateExpenseButton() {\n  const [createExpense] = useCreateExpense();\n  const { expenses } = useDictionary();\n\n  return (\n    <ModalButton\n      button={CreateButton}\n      modal={props => (\n        <ExpenseModal\n          init={{\n            name: null,\n            account: {},\n            date: null,\n            categories: [],\n          }}\n          title={expenses.modal.createTitle}\n          onSave={createExpense}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nexport default function Expenses() {\n  const query = useGetCurrentExpenses();\n  const { expenses, sidebar } = useDictionary();\n\n  return (\n    <Page>\n      <PageHeader>{sidebar.pages.expenses}</PageHeader>\n      <QueryTablePanel\n        title={expenses.table.title}\n        query={query}\n        getData={data => data.budget.currentMonth.expenses}\n        buttons={<CreateExpenseButton />}\n        columns={withColumnNames(columns, expenses.table.columns)}\n        keyField=\"id\"\n        expandRow={expandRow}\n        rowClasses={rowClasses}\n        striped={false}\n      />\n    </Page>\n  );\n}\n","import React, { useRef } from 'react';\nimport Page from './template/Page/Page';\nimport PageHeader from './template/Page/PageHeader';\nimport ModalButton from './template/Utilities/ModalButton';\nimport CreateButton from './template/Utilities/CreateButton';\nimport EditTableButton from './template/Utilities/EditTableButton';\nimport { FormControl } from './template/Utilities/FormControl';\nimport FormModal from './template/Utilities/FormModal';\nimport { useFormData } from './template/Utilities/useFormData';\nimport Amount from '../model/Amount';\nimport Month from '../model/Month';\nimport {\n  useCreateTransfer,\n  useGetCurrentTransfers,\n  useUpdateTransfer,\n  useDeleteTranfer,\n} from './gql/transfers';\nimport { QueryTablePanel } from './gql/QueryTablePanel';\nimport { useGetAccounts } from './gql/accounts';\nimport { useBudget } from './gql/budget';\nimport { WithQuery } from './gql/WithQuery';\nimport TableButton from './template/Utilities/TableButton';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { Combobox } from './template/Utilities/Combobox';\nimport { InlineFormControl } from './template/Utilities/InlineFormControl';\nimport { withColumnNames, useDictionary } from './template/Utilities/Lang';\n\nconst columns = [\n  { dataField: 'title' },\n  {\n    dataField: 'fromAccount',\n    formatter: a => a && a.name,\n  },\n  {\n    dataField: 'toAccount',\n    formatter: a => a.name,\n  },\n  {\n    dataField: 'amount',\n    align: 'right',\n    headerAlign: 'right',\n    formatter: Amount.format,\n  },\n  {\n    dataField: 'date',\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    dataField: 'actions',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdateTransferButton transfer={row} />\n        <DeleteTransferButton transfer={row} />\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nfunction TransferModal({ init, ...props }) {\n  const { selectedBudget } = useBudget();\n  const { transfers } = useDictionary();\n  const query = useGetAccounts();\n  const formData = useFormData({\n    title: { $init: init.title },\n    date: { $init: init.date },\n    amount: {\n      $init: Amount.format(init.amount, false),\n      $process: Amount.parse,\n    },\n    fromAccountID: {\n      $init: init.fromAccount && init.fromAccount.id,\n      $process: v => (v === '' ? null : v),\n    },\n    toAccountID: { $init: init.toAccount.id },\n  });\n  const month = Month.parse(selectedBudget.currentMonth.month);\n  const first = month.firstDay();\n  const last = month.lastDay();\n  return (\n    <FormModal formData={formData} autoFocusRef={formData.title} {...props}>\n      <WithQuery query={query}>\n        {({ data }) => (\n          <>\n            <FormControl\n              required\n              label={transfers.modal.labels.title}\n              inline={10}\n              formData={formData.title}\n              feedback=\"Provide title\"\n            />\n            <FormControl\n              label={transfers.modal.labels.date}\n              inline={10}\n              formData={formData.date}\n              feedback=\"Provide date\"\n              type=\"date\"\n              required\n              min={first.format()}\n              max={last.format()}\n            />\n            <FormControl\n              inline={10}\n              label={transfers.modal.labels.amount}\n              feedback=\"Provide amount\"\n              type=\"number\"\n              required\n              formData={formData.amount}\n              step=\"0.01\"\n            />\n            <InlineFormControl\n              size={10}\n              label={transfers.modal.labels.fromAccount}\n            >\n              <Combobox\n                allowedValues={data.accounts.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n                _ref={formData.fromAccountID}\n                defaultValue={formData.fromAccountID.default()}\n              />\n            </InlineFormControl>\n            <InlineFormControl\n              size={10}\n              label={transfers.modal.labels.toAccount}\n            >\n              <Combobox\n                allowedValues={data.accounts.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n                _ref={formData.toAccountID}\n                defaultValue={formData.toAccountID.default()}\n              />\n            </InlineFormControl>\n          </>\n        )}\n      </WithQuery>\n    </FormModal>\n  );\n}\n\nfunction DeleteTransferButton({ transfer }) {\n  const [deleteTransfer] = useDeleteTranfer();\n  return (\n    <TableButton\n      faIcon=\"trash-alt\"\n      variant=\"secondary\"\n      onClick={() => deleteTransfer(transfer.id)}\n    />\n  );\n}\n\nfunction UpdateTransferButton({ transfer }) {\n  const [updateTransfer] = useUpdateTransfer();\n  const { transfers } = useDictionary();\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <TransferModal\n          init={transfer}\n          title={transfers.modal.editTitle}\n          onSave={input => updateTransfer(transfer.id, input)}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nfunction CreateTransferButton({ openRef }) {\n  const [createTransfer] = useCreateTransfer();\n  const { transfers } = useDictionary();\n\n  return (\n    <ModalButton\n      openRef={openRef}\n      button={CreateButton}\n      modal={props => (\n        <TransferModal\n          init={{\n            title: null,\n            fromAccount: { id: null },\n            toAccount: { id: null },\n            amount: null,\n            date: null,\n          }}\n          title={transfers.modal.createTitle}\n          onSave={createTransfer}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nconst keyMap = {\n  openModal: 'n',\n};\nconst keyHandlers = openCreateModal => ({\n  openModal: () => openCreateModal.current(),\n});\n\nexport default function Transfers() {\n  const query = useGetCurrentTransfers();\n  const openCreateModal = useRef();\n  const { sidebar, transfers } = useDictionary();\n\n  return (\n    <Page>\n      <GlobalHotKeys keyMap={keyMap} handlers={keyHandlers(openCreateModal)} />\n      <PageHeader>{sidebar.pages.transfers}</PageHeader>\n      <QueryTablePanel\n        title={transfers.table.title}\n        query={query}\n        getData={data => data.budget.currentMonth.transfers}\n        buttons={<CreateTransferButton openRef={openCreateModal} />}\n        columns={withColumnNames(columns, transfers.table.columns)}\n        keyField=\"id\"\n      />\n    </Page>\n  );\n}\n","import React, { useRef } from 'react';\nimport Page from './template/Page/Page';\nimport PageHeader from './template/Page/PageHeader';\nimport ModalButton from './template/Utilities/ModalButton';\nimport CreateButton from './template/Utilities/CreateButton';\nimport EditTableButton from './template/Utilities/EditTableButton';\nimport { FormControl } from './template/Utilities/FormControl';\nimport { OptionalFormControl } from './template/Utilities/OptionalFormControl';\nimport FormModal from './template/Utilities/FormModal';\nimport { useFormData } from './template/Utilities/useFormData';\nimport Amount from '../model/Amount';\nimport {\n  useCreatePlan,\n  useGetCurrentPlans,\n  useUpdatePlan,\n  useDeletePlan,\n} from './gql/plans';\nimport { QueryTablePanel } from './gql/QueryTablePanel';\nimport { useGetEnvelopes } from './gql/envelopes';\nimport { WithQuery } from './gql/WithQuery';\nimport TableButton from './template/Utilities/TableButton';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { InlineFormControl } from './template/Utilities/InlineFormControl';\nimport { Combobox } from './template/Utilities/Combobox';\nimport { useDictionary, withColumnNames } from './template/Utilities/Lang';\n\nconst columns = [\n  { dataField: 'title' },\n  {\n    dataField: 'fromEnvelope',\n    formatter: a => a && a.name,\n  },\n  {\n    dataField: 'toEnvelope',\n    formatter: a => a.name,\n  },\n  {\n    dataField: 'currentAmount',\n    formatter: Amount.format,\n    align: 'right',\n    headerAlign: 'right',\n  },\n  {\n    dataField: 'recurringAmount',\n    formatter: a =>\n      a !== null ? <i className=\"fas fa-fw fa-sync-alt\" /> : null,\n  },\n  {\n    dataField: 'actions',\n    isDummyColumn: true,\n    formatter: (cell, row) => (\n      <span>\n        <UpdatePlanButton plan={row} />\n        <DeletePlanButton plan={row} />\n      </span>\n    ),\n    style: {\n      whiteSpace: 'nowrap',\n      width: '1%',\n    },\n  },\n];\n\nfunction PlanModal({ init, ...props }) {\n  const query = useGetEnvelopes();\n  const { plans } = useDictionary();\n  const formData = useFormData({\n    title: { $init: init.title },\n    currentAmount: {\n      $init: Amount.format(init.currentAmount, false),\n      $process: Amount.parse,\n    },\n    recurringAmount: {\n      $init: Amount.format(init.recurringAmount, false),\n      $default: fd => Amount.format(fd.currentAmount.value()),\n      $process: Amount.parse,\n    },\n    fromEnvelopeID: {\n      $init: init.fromEnvelope !== null ? init.fromEnvelope.id : '',\n      $process: v => (v === '' ? null : v),\n    },\n    toEnvelopeID: { $init: init.toEnvelope.id },\n  });\n  return (\n    <FormModal formData={formData} autoFocusRef={formData.title} {...props}>\n      <WithQuery query={query}>\n        {({ data }) => (\n          <>\n            <FormControl\n              required\n              label={plans.modal.labels.title}\n              inline={10}\n              formData={formData.title}\n              feedback=\"Provide title\"\n            />\n            <FormControl\n              inline={8}\n              label={plans.modal.labels.amount}\n              feedback=\"Provide amount\"\n              type=\"number\"\n              required\n              formData={formData.currentAmount}\n              step=\"0.01\"\n            />\n            <OptionalFormControl\n              initEnabled={init.recurringAmount !== null}\n              inline={8}\n              label={plans.modal.labels.recurring}\n              feedback=\"Provide amount for recurring plans\"\n              type=\"number\"\n              required\n              formData={formData.recurringAmount}\n              step=\"0.01\"\n            />\n            <InlineFormControl size={8} label={plans.modal.labels.fromEnvelope}>\n              <Combobox\n                _ref={formData.fromEnvelopeID}\n                defaultValue={formData.fromEnvelopeID.default()}\n                allowedValues={data.envelopes.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n              />\n            </InlineFormControl>\n            <InlineFormControl size={8} label={plans.modal.labels.toEnvelope}>\n              <Combobox\n                _ref={formData.toEnvelopeID}\n                defaultValue={formData.toEnvelopeID.default()}\n                allowedValues={data.envelopes.map(({ id, name }) => ({\n                  id,\n                  label: name,\n                }))}\n              />\n            </InlineFormControl>\n          </>\n        )}\n      </WithQuery>\n    </FormModal>\n  );\n}\n\nfunction UpdatePlanButton({ plan }) {\n  const [updatePlan] = useUpdatePlan();\n  const { plans } = useDictionary();\n\n  return (\n    <ModalButton\n      button={EditTableButton}\n      modal={props => (\n        <PlanModal\n          init={plan}\n          title={plans.modal.editTitle}\n          onSave={input => updatePlan(plan.id, input)}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nfunction DeletePlanButton({ plan }) {\n  const [deletePlan] = useDeletePlan();\n  return (\n    <TableButton\n      faIcon=\"trash-alt\"\n      variant=\"secondary\"\n      onClick={() => deletePlan(plan.id)}\n    />\n  );\n}\n\nfunction CreatePlanButton({ openRef }) {\n  const [createPlan] = useCreatePlan();\n  const { plans } = useDictionary();\n\n  return (\n    <ModalButton\n      openRef={openRef}\n      button={CreateButton}\n      modal={props => (\n        <PlanModal\n          init={{\n            title: null,\n            fromEnvelope: { id: null },\n            toEnvelope: { id: null },\n            currentAmount: null,\n            recurringAmount: null,\n            date: null,\n          }}\n          title={plans.modal.createTitle}\n          onSave={createPlan}\n          {...props}\n        />\n      )}\n    />\n  );\n}\n\nconst keyMap = {\n  create: 'n',\n};\n\nconst handlers = openCreateModalRef => ({\n  create: () => openCreateModalRef.current(),\n});\n\nexport default function Plans() {\n  const openCreateModalRef = useRef();\n  const query = useGetCurrentPlans();\n  const { sidebar, plans } = useDictionary();\n\n  return (\n    <Page>\n      <GlobalHotKeys keyMap={keyMap} handlers={handlers(openCreateModalRef)} />\n      <PageHeader>{sidebar.pages.plans}</PageHeader>\n      <QueryTablePanel\n        title={plans.table.title}\n        query={query}\n        getData={data => data.budget.currentMonth.plans}\n        buttons={<CreatePlanButton openRef={openCreateModalRef} />}\n        columns={withColumnNames(columns, plans.table.columns)}\n        keyField=\"id\"\n      />\n    </Page>\n  );\n}\n","import React from 'react';\n\nexport function Gauge({ className, variant, title, value, faIcon }) {\n  return (\n    <div className={className}>\n      <div className={`card border-left-${variant} shadow h-100 py-2`}>\n        <div className=\"card-body\">\n          <div className=\"row no-gutters align-items-center\">\n            <div className=\"col mr-2\">\n              <div\n                className={`text-xs font-weight-bold text-${variant} text-uppercase mb-1`}\n              >\n                {title}\n              </div>\n              <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                {value}\n              </div>\n            </div>\n            <div className=\"col-auto\">\n              <i className={`fas fa-${faIcon} fa-2x text-gray-300`} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Page from './template/Page/Page';\nimport { Gauge } from './template/Gauge';\nimport { useGetCurrentMonthlyReport } from './gql/monthlyReport';\nimport { WithQuery } from './gql/WithQuery';\nimport { useGetEnvelopes } from './gql/envelopes';\nimport { useGetAccounts } from './gql/accounts';\nimport Amount from '../model/Amount';\nimport { Row } from 'react-bootstrap';\nimport { Panel } from './template/Utilities/Panel';\nimport { SplitButton } from './template/Utilities/SplitButton';\nimport Month from '../model/Month';\nimport { useCloseCurrentMonth } from './gql/budget';\nimport { useDictionary } from './template/Utilities/Lang';\n\nfunction Gauges({ className, month }) {\n  const { dashboard } = useDictionary();\n  return (\n    <div className={className}>\n      <Row>\n        <Gauge\n          className=\"col-6 col-lg-12 mb-4\"\n          variant=\"primary\"\n          title={dashboard.planned}\n          value={Amount.format(month.totalPlannedAmount)}\n          faIcon=\"clipboard-list\"\n        />\n        <Gauge\n          className=\"col-6 col-lg-12 mb-4\"\n          variant=\"primary\"\n          title={dashboard.incomes}\n          value={Amount.format(month.totalIncomeAmount)}\n          faIcon=\"briefcase\"\n        />\n        <Gauge\n          className=\"col-6 col-lg-12 mb-4\"\n          variant=\"primary\"\n          title={dashboard.leftToPlan}\n          value={Amount.format(\n            month.totalIncomeAmount - month.totalPlannedAmount\n          )}\n          faIcon=\"balance-scale\"\n        />\n        <Gauge\n          className=\"col-6 col-lg-12 mb-4\"\n          variant=\"primary\"\n          title={dashboard.expenses}\n          value={Amount.format(month.totalExpenseAmount)}\n          faIcon=\"receipt\"\n        />\n      </Row>\n    </div>\n  );\n}\n\nconst severityIcon = {\n  ERROR: 'exclamation-circle',\n  WARNING: 'exclamation-triangle',\n  INFO: 'info-circle',\n};\n\nconst severityVariant = {\n  ERROR: 'danger',\n  WARNING: 'warning',\n  INFO: 'primary',\n};\n\nfunction ProblemMessage({ problem }) {\n  const envelopesQuery = useGetEnvelopes();\n  const accountsQuery = useGetAccounts();\n  const { dashboard } = useDictionary();\n\n  return (\n    <WithQuery query={envelopesQuery}>\n      {({ data: envelopesData }) => (\n        <WithQuery query={accountsQuery}>\n          {({ data: accountsData }) =>\n            problem.__typename === 'Misplanned'\n              ? problem.overplanned\n                ? dashboard.problems.overplanned\n                : dashboard.problems.underplanned\n              : problem.__typename === 'NegativeBalanceOnEnvelope'\n              ? dashboard.problems.expensesExceedPlans(\n                  envelopesData.envelopes.find(e => e.id === problem.id).name\n                )\n              : problem.__typename === 'EnvelopeOverLimit'\n              ? dashboard.problems.envelopeOverLimit(\n                  envelopesData.envelopes.find(e => e.id === problem.id).name\n                )\n              : problem.__typename === 'NegativeBalanceOnAccount'\n              ? dashboard.problems.negativeAccountBalance(\n                  accountsData.accounts.find(a => a.id === problem.id).name\n                )\n              : problem.__typename === 'MonthStillInProgress'\n              ? dashboard.problems.monthNotEnded\n              : problem.__typename\n          }\n        </WithQuery>\n      )}\n    </WithQuery>\n  );\n}\n\nfunction Problem({ problem }) {\n  return (\n    <li className={`list-group-item text-${severityVariant[problem.severity]}`}>\n      <i className={`fas fa-fw fa-${severityIcon[problem.severity]} mr-1`} />\n      <ProblemMessage problem={problem} />\n    </li>\n  );\n}\n\nfunction NoProblems() {\n  const { dashboard } = useDictionary();\n  return (\n    <li className=\"list-group-item text-success\">\n      <i className=\"fas fa-fw fa-check-circle mr-1\" />\n      {dashboard.noProblems}\n    </li>\n  );\n}\n\nfunction MonthProblems({ className, problems }) {\n  const { dashboard } = useDictionary();\n  return (\n    <Panel\n      className={className}\n      header={\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Panel.Title>{dashboard.problems.title}</Panel.Title>\n        </div>\n      }\n      body={\n        <ul className=\"list-group list-group-flush\">\n          {problems.length > 0 ? (\n            problems.map((problem, idx) => (\n              <Problem key={idx} problem={problem} />\n            ))\n          ) : (\n            <NoProblems />\n          )}\n        </ul>\n      }\n    />\n  );\n}\n\nfunction StartNextMonthButton({ disabled, warn }) {\n  const [closeCurrentMonth] = useCloseCurrentMonth();\n  const { dashboard } = useDictionary();\n  return (\n    <SplitButton\n      faIcon=\"clipboard-check\"\n      variant={warn ? 'warning' : 'success'}\n      disabled={disabled}\n      onClick={() => closeCurrentMonth()}\n    >\n      {dashboard.buttons.closeMonth}\n    </SplitButton>\n  );\n}\n\nfunction CurrentMonth({ className, month }) {\n  const { dashboard, months } = useDictionary();\n  const parsed = Month.parse(month.month);\n\n  return (\n    <Panel\n      className={className}\n      header={\n        <Panel.HeaderWithButton\n          title={\n            <span>\n              {dashboard.currentMonth}:{' '}\n              <strong>\n                <em>\n                  {months[parsed.month - 1]} {parsed.year}\n                </em>\n              </strong>\n            </span>\n          }\n        >\n          <StartNextMonthButton\n            disabled={month.problems.some(p => p.severity === 'ERROR')}\n            warn={month.problems.length > 0}\n          />\n        </Panel.HeaderWithButton>\n      }\n    />\n  );\n}\n\nexport function MonthDashboardPage() {\n  const query = useGetCurrentMonthlyReport();\n  return (\n    <Page>\n      <WithQuery query={query}>\n        {({ data }) => (\n          <Row>\n            <CurrentMonth\n              className=\"col-12 d-lg-none px-0\"\n              month={data.budget.currentMonth}\n            />\n            <Gauges\n              className=\"col-12 col-lg-3\"\n              month={data.budget.currentMonth}\n            />\n            <MonthProblems\n              className=\"col-12 d-lg-none px-0\"\n              problems={data.budget.currentMonth.problems}\n            />\n            <Row className=\"col-12 col-lg-9 flex-lg-column\">\n              <CurrentMonth\n                className=\"d-none d-lg-block\"\n                month={data.budget.currentMonth}\n              />\n              <MonthProblems\n                className=\"d-none d-lg-block flex-grow-1\"\n                problems={data.budget.currentMonth.problems}\n              />\n            </Row>\n          </Row>\n        )}\n      </WithQuery>\n    </Page>\n  );\n}\n","export default {\n  buttons: {\n    create: 'Dodaj',\n    cancel: 'Anuluj',\n    save: 'Zapisz',\n  },\n  sidebar: {\n    sections: {\n      currentMonth: 'Bieżący miesiąc',\n      budget: 'Budżet',\n    },\n    pages: {\n      dashboard: 'Podsumowanie',\n      expenses: 'Wydatki',\n      transfers: 'Przelewy',\n      plans: 'Plany',\n      accounts: 'Konta',\n      envelopes: 'Koperty',\n    },\n  },\n  topbar: {\n    budgetLabel: 'Budżet',\n    alertsLabel: 'Powiadomienia',\n    messagesLabel: 'Wiadomości',\n  },\n  dashboard: {\n    planned: 'Zaplanowano',\n    incomes: 'Wpływy',\n    leftToPlan: 'Pozostało do zaplanowania',\n    expenses: 'Wydatki',\n    currentMonth: 'Bieżący miesiąc',\n    noProblems: 'Wszystko w porządku',\n    problems: {\n      title: 'Problemy',\n      overplanned: 'Plany na bieżący miesiąc przekraczają wydatki',\n      underplanned: 'Część środków jest nierozplanowana',\n      expensesExceedPlans: envelope =>\n        `Wydatki przekroczyły zaplanowany budżet na kopercie \"${envelope}\"`,\n      envelopeOverLimit: envelope =>\n        `Limit dla koperty \"${envelope}\" został przekroczony`,\n      negativeAccountBalance: account =>\n        `Bilans na koncie \"${account}\" jest ujemny`,\n      monthNotEnded: 'Miesiąc się jeszcze nie skończył',\n    },\n    buttons: {\n      closeMonth: 'Zamknij miesiąc',\n    },\n  },\n  accounts: {\n    table: {\n      title: 'Konta',\n      columns: {\n        balance: 'Bilans',\n        name: 'Nazwa',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nowe konto',\n      editTitle: 'Edytuj konto',\n      labels: {\n        name: 'Nazwa',\n      },\n    },\n  },\n  envelopes: {\n    table: {\n      title: 'Koperty',\n      columns: {\n        balance: 'Bilans',\n        name: 'Nazwa',\n        limit: 'Limit',\n        overLimit: 'Ponad limit',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nową kopertę',\n      editTitle: 'Edytuj kopertę',\n      labels: {\n        name: 'Nazwa',\n        limit: 'Limit',\n      },\n    },\n  },\n  categories: {\n    table: {\n      title: 'Kategorie',\n      columns: {\n        name: 'Nazwa',\n        envelope: 'Koperta',\n        description: 'Opis',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nową kategorię',\n      editTitle: 'Edytuj kategorię',\n      labels: {\n        name: 'Nazwa',\n        envelope: 'Koperta',\n        description: 'Opis',\n      },\n    },\n  },\n  plans: {\n    table: {\n      title: 'Plany',\n      columns: {\n        title: 'Tytuł',\n        fromEnvelope: 'Z',\n        toEnvelope: 'Do',\n        currentAmount: 'Kwota',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nowy plan',\n      editTitle: 'Edytuj plan',\n      labels: {\n        title: 'Tytuł',\n        fromEnvelope: 'Z',\n        toEnvelope: 'Do',\n        amount: 'Kwota',\n        recurring: 'Cyklicznie',\n      },\n    },\n  },\n  transfers: {\n    table: {\n      title: 'Przelewy',\n      columns: {\n        title: 'Tytuł',\n        fromAccount: 'Z',\n        toAccount: 'Do',\n        amount: 'Kwota',\n        date: 'Data',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nowy przelew',\n      editTitle: 'Edytuj przelew',\n      labels: {\n        title: 'Tytuł',\n        fromAccount: 'Z',\n        toAccount: 'Do',\n        amount: 'Kwota',\n        date: 'Data',\n      },\n    },\n  },\n  expenses: {\n    table: {\n      title: 'Wydatki',\n      columns: {\n        title: 'Tytuł',\n        totalAmount: 'Kwota',\n        date: 'Data',\n        account: 'Konto',\n      },\n    },\n    modal: {\n      createTitle: 'Dodaj nowy wydatek',\n      editTitle: 'Edytuj wydatek',\n      labels: {\n        title: 'Tytuł',\n        fromAccount: 'Z',\n        toAccount: 'Do',\n        account: 'Konto',\n        date: 'Data',\n        categories: 'Kategorie',\n        amount: 'Kwota',\n        category: 'Kategoria',\n      },\n    },\n  },\n  months: [\n    'Styczeń',\n    'Luty',\n    'Marzec',\n    'Kwiecień',\n    'Maj',\n    'Czerwiec',\n    'Lipiec',\n    'Sierpień',\n    'Wrzesień',\n    'Październik',\n    'Listopad',\n    'Grudzień',\n  ],\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\nimport { setContext } from 'apollo-link-context';\n\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from './fragmentTypes.json';\nimport { useAuth0 } from './react-auth0-spa.js';\nimport React, { useEffect } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData,\n});\n\nexport function isSubscriptionOperation({ query }) {\n  const definition = getMainDefinition(query);\n  return (\n    definition.kind === 'OperationDefinition' &&\n    definition.operation === 'subscription'\n  );\n}\n\nexport function createClient(token) {\n  const graphqlApiUrl = process.env.REACT_APP_GQL_URL;\n  // const graphqlApiUrl = 'http://localhost:8080/query';\n  const httpLink = createHttpLink({ uri: graphqlApiUrl });\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  });\n  const cache = new InMemoryCache({ fragmentMatcher });\n\n  const errorLink = onError(({ graphQLErrors, networkError }) => {\n    if (process.env.REACT_APP_ENV !== 'production') {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }\n  });\n\n  // const link = split(isSubscriptionOperation, wsLink, httpLink);\n  const link = authLink.concat(httpLink);\n\n  return new ApolloClient({\n    uri: graphqlApiUrl,\n    cache,\n    link: ApolloLink.from([errorLink, link]),\n    connectToDevTools: true,\n  });\n}\n\nexport function AuthApolloProvider({ children }) {\n  const { isAuthenticated, loading, loginWithRedirect, token } = useAuth0();\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    if (!isAuthenticated) {\n      loginWithRedirect({});\n      return;\n    }\n  }, [isAuthenticated, loginWithRedirect, loading]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAuthenticated || !token) {\n    return <div />;\n  }\n\n  return (\n    <ApolloProvider client={createClient(token)}>{children}</ApolloProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sb-admin-2.css';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { AuthApolloProvider, createClient } from './apollo';\nimport { Auth0Provider, Auth0Context } from './react-auth0-spa';\nimport config from './auth_config.json';\nimport { Beta } from './components/Beta';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nconst ProdAuthorizationProvider = ({ children }) => (\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location}\n    onRedirectCallback={onRedirectCallback}\n    audience={config.audience}\n    scope=\"beta\"\n    returnTo={window.location}\n  >\n    <AuthApolloProvider>{children}</AuthApolloProvider>\n  </Auth0Provider>\n);\n\nconst DevAuthorizationProvider = ({ children }) => (\n  <Auth0Context.Provider\n    value={{\n      isAuthenticated: true,\n      loading: false,\n      loginWithRedirect: () => {},\n      user: {\n        name: 'Valerie Luna',\n        picture: 'https://source.unsplash.com/QAB-WJcbgJk/60x60',\n      },\n      getTokenScopes: () => Promise.resolve(['beta']),\n    }}\n  >\n    <ApolloProvider client={createClient()}>{children}</ApolloProvider>\n  </Auth0Context.Provider>\n);\n\nconst authDisabled = process.env.REACT_APP_INSECURE_AUTH_DISABLED;\nconsole.log();\nconst AuthorizationProvider =\n  authDisabled !== 'true'\n    ? ProdAuthorizationProvider\n    : DevAuthorizationProvider;\n\nReactDOM.render(\n  <AuthorizationProvider>\n    <Beta>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Beta>\n  </AuthorizationProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { useAuth0 } from '../react-auth0-spa';\nimport React, { useState, useEffect } from 'react';\n\nexport function Beta({ children }) {\n  const { getTokenScopes } = useAuth0();\n  const [scope, setScope] = useState();\n\n  useEffect(() => {\n    getTokenScopes().then(setScope);\n  }, [setScope, getTokenScopes]);\n\n  if (!scope) {\n    return <div></div>;\n  }\n\n  const isBetaUser = scope.some(v => v === 'beta');\n\n  if (isBetaUser) {\n    return children;\n  }\n  return <div>This conent is available only to beta users</div>;\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Topbar from '../Topbar';\nimport SBAdmin2 from '../template/SBAdmin2';\nimport { sidebarConfig } from './sidebarConfig';\nimport { BudgetProvider, BudgetContext } from '../gql/budget';\nimport Accounts from '../Accounts';\nimport Envelopes from '../Envelopes/EnvelopesPage';\nimport Expenses from '../Expenses';\nimport Transfers from '../Transfers';\nimport Plans from '../Plans';\nimport { MonthDashboardPage } from '../MonthDashboardPage';\nimport { LangProvider } from '../template/Utilities/Lang';\nimport pl from '../../lang/pl';\n\nexport default function App() {\n  return (\n    <LangProvider dictionary={pl}>\n      <BudgetProvider>\n        <SBAdmin2\n          sidebarProps={{\n            renderBrandName: () => 'Budget',\n            renderBrandIcon: () => <i className=\"fas fa-bold\" />,\n            config: sidebarConfig(pl),\n          }}\n          topbar={Topbar}\n          copyright={'Budget 2019'}\n        >\n          <BudgetContext.Consumer>\n            {({ selectedBudget }) =>\n              selectedBudget && (\n                <Switch>\n                  <Route path=\"/accounts\" component={Accounts} />\n                  <Route path=\"/envelopes\" component={Envelopes} />\n                  <Route path=\"/expenses\" component={Expenses} />\n                  <Route path=\"/transfers\" component={Transfers} />\n                  <Route path=\"/plans\" component={Plans} />\n                  <Route path=\"/\" component={MonthDashboardPage} />\n                </Switch>\n              )\n            }\n          </BudgetContext.Consumer>\n        </SBAdmin2>\n      </BudgetProvider>\n    </LangProvider>\n  );\n}\n"],"sourceRoot":""}